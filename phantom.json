{
   "phantom.app":{
      "ABC":"function()",
      "ACTION_ID_INGEST_ON_POLL":"(<class 'str'>) on_poll",
      "ACTION_ID_INGEST_ON_RECEIVE":"(<class 'str'>) on_receive",
      "ACTION_ID_TEST_ASSET_CONNECTIVITY":"(<class 'str'>) test_asset_connectivity",
      "ACTION_RESULT_HEADERS":"(<class 'frozenset'>) frozenset({'app', 'asset', 'result_data', 'name', 'status', 'action_run_id', 'message', 'summary', 'asset_id', 'action', 'app_id', 'app_run_id'})",
      "ACTION_RESULT_KEYS":"(<class 'frozenset'>) frozenset({'app', 'asset', 'result_data', 'name', 'status', 'action_run_id', 'message', 'summary', 'asset_id', 'action', 'app_id', 'oid', 'action_results', 'app_run_id'})",
      "ACTION_RESULT_KEYS_NO_FLATTENING":"(<class 'frozenset'>) frozenset({'app', 'asset', 'result_data', 'name', 'status', 'action_run_id', 'message', 'summary', 'asset_id', 'action', 'app_id', 'app_run_id'})",
      "ACTION_RESULT_KEYS_YES_FLATTENING":"(<class 'frozenset'>) frozenset({'action_results', 'oid'})",
      "ACTION_RESULT_KEY_ACTION":"(<class 'str'>) action",
      "ACTION_RESULT_KEY_ACTION_RESULTS":"(<class 'str'>) action_results",
      "ACTION_RESULT_KEY_ACTION_RUN_ID":"(<class 'str'>) action_run_id",
      "ACTION_RESULT_KEY_APP":"(<class 'str'>) app",
      "ACTION_RESULT_KEY_APP_ID":"(<class 'str'>) app_id",
      "ACTION_RESULT_KEY_APP_RUN_ID":"(<class 'str'>) app_run_id",
      "ACTION_RESULT_KEY_ASSET":"(<class 'str'>) asset",
      "ACTION_RESULT_KEY_ASSET_ID":"(<class 'str'>) asset_id",
      "ACTION_RESULT_KEY_MESSAGE":"(<class 'str'>) message",
      "ACTION_RESULT_KEY_NAME":"(<class 'str'>) name",
      "ACTION_RESULT_KEY_OID":"(<class 'str'>) oid",
      "ACTION_RESULT_KEY_RESULT_DATA":"(<class 'str'>) result_data",
      "ACTION_RESULT_KEY_STATUS":"(<class 'str'>) status",
      "ACTION_RESULT_KEY_SUMMARY":"(<class 'str'>) summary",
      "APILocation":"function(value, names=None, *, module=None, qualname=None, type=None, start=1)",
      "APPS_STATE_PATH":"(<class 'str'>) /home/phantomuser/phantom/local_data/app_states",
      "APP_DEFAULT_ARTIFACT_LABEL":"(<class 'str'>) artifact",
      "APP_DEFAULT_ARTIFACT_TYPE":"(<class 'str'>) network",
      "APP_DEFAULT_CONTAINER_LABEL":"(<class 'str'>) incident",
      "APP_ERROR":"(<class 'bool'>) False",
      "APP_ERROR_STR":"(<class 'str'>) failed",
      "APP_ERR_ACTION_APP_CONFIG_DICT_NOT_FOUND":"(<class 'str'>) No App config dictionary present in Action JSON",
      "APP_ERR_ACTION_CONFIG_DICT_NOT_FOUND":"(<class 'str'>) No Config dictionary present in Action JSON",
      "APP_ERR_ACTION_DICT_MULTI_FOUND":"(<class 'str'>) Multiple action infos for '{action_id}' in App JSON should contain only one",
      "APP_ERR_ACTION_DICT_NOT_FOUND":"(<class 'str'>) Unknown action. Unable to find action info for '{action_id}' in App JSON",
      "APP_ERR_ALL_CMDS":"(<class 'str'>) 100% of action executions failed",
      "APP_ERR_APP_JSON_LOAD":"(<class 'str'>) Failed to load the app JSON",
      "APP_ERR_ASSET_ID_LOCK_INVALID":"(<class 'str'>) Asset configuration (like the 'asset id') not found in the configuration sent to the app",
      "APP_ERR_CMD_EXEC":"(<class 'str'>) Action execution failed",
      "APP_ERR_CONNECTOR_RUN_JSON_LOAD":"(<class 'str'>) Failed to load the connector run JSON. Missing or invalid '{key}'",
      "APP_ERR_CONN_RUN":"(<class 'str'>) Connector run failed",
      "APP_ERR_DECRYPT_KEY":"(<class 'str'>) Unable to decrypt {dict_name} key '{key}'",
      "APP_ERR_DECRYPT_KEY_NO_KEY":"(<class 'str'>) Decryption key not passed. Unable to decrypt {dict_name} key '{key}'",
      "APP_ERR_EXCEPTION_OCCURED":"(<class 'str'>) Exception Occurred",
      "APP_ERR_FILE_ADD_TO_VAULT":"(<class 'str'>) Failed to add file to vault",
      "APP_ERR_INGEST_MODULE_NOT_FOUND":"(<class 'str'>) Splunk SOAR ingest module not found",
      "APP_ERR_INITIALIZE_DID_NOT_RETURN_A_VALUE":"(<class 'str'>) {classname}::initialize() did not return a 'mandotary' status code",
      "APP_ERR_JSON_ACTION_PARAM_DICT_NOT_FOUND":"(<class 'str'>) Parameter dict not found for action '{action_id}' in App JSON",
      "APP_ERR_JSON_CONFIG_DICT_NOT_FOUND":"(<class 'str'>) No configuration dictionary present in the app JSON",
      "APP_ERR_LOCK_ACQUIRE":"(<class 'str'>) Failed to acquire lock",
      "APP_ERR_LOCK_ACQUIRE_NAMED":"(<class 'str'>) Failed to acquire lock named '{lock_name}' for Action: '{action_name}', App: '{app_name}'",
      "APP_ERR_LOCK_DATA_PATH_INVALID":"(<class 'str'>) Data path: {0} value cannot be used as a lock name",
      "APP_ERR_LOCK_KEY_NOT_FOUND":"(<class 'str'>) Key '{key_name}' not found in the {dict_type} JSON sent to the app",
      "APP_ERR_LOCK_MODULE_UNAVAILABLE":"(<class 'str'>) Backend module required to carry out Lock/UnLock operations is unavailable",
      "APP_ERR_LOCK_OBJECT_ALREADY_USED":"(<class 'str'>) Object already used once, multiple uses of object is not allowed",
      "APP_ERR_LOCK_OBJECT_NAME_NONE":"(<class 'str'>) Lock name not set. Please lock first",
      "APP_ERR_LOCK_OBJECT_UNLOCKED":"(<class 'str'>) Object not in locked state. Unlock operation not possible",
      "APP_ERR_NYI":"(<class 'str'>) Not yet implemented",
      "APP_ERR_UNK_CMD":"(<class 'str'>) Unknown Action: {action_identifier}",
      "APP_INGEST_ACTIONS":"(<class 'list'>) ['on_poll', 'poll_now']",
      "APP_INITIALIZE_RETURNED_ERROR":"(<class 'str'>) {classname}::initialize() returned error",
      "APP_JSON_ACTIONS":"(<class 'str'>) actions",
      "APP_JSON_ACTION_CANCELLED":"(<class 'str'>) action_cancelled",
      "APP_JSON_ACTION_IDENTIFIER":"(<class 'str'>) identifier",
      "APP_JSON_ACTION_NAME":"(<class 'str'>) action",
      "APP_JSON_ALLOW_LIST":"(<class 'str'>) allow_list",
      "APP_JSON_APP_CONFIG":"(<class 'str'>) app_config",
      "APP_JSON_APP_ID":"(<class 'str'>) appid",
      "APP_JSON_APP_NAME":"(<class 'str'>) name",
      "APP_JSON_APP_RUN_ID":"(<class 'str'>) app_run_id",
      "APP_JSON_ARRAY_ITEMS":"(<class 'str'>) items",
      "APP_JSON_ARTIFACT_COUNT":"(<class 'str'>) artifact_count",
      "APP_JSON_ART_DUP":"(<class 'str'>) artifacts_duplicate",
      "APP_JSON_ART_FAIL":"(<class 'str'>) artifacts_failed",
      "APP_JSON_ART_SUCC":"(<class 'str'>) artifacts_successful",
      "APP_JSON_ASSET_ID":"(<class 'str'>) asset_id",
      "APP_JSON_CONFIG":"(<class 'str'>) config",
      "APP_JSON_CONFIGURATION":"(<class 'str'>) configuration",
      "APP_JSON_CONFIGURATION_REQUIRED":"(<class 'str'>) required",
      "APP_JSON_CONFIG_PARAMETERS":"(<class 'str'>) parameters",
      "APP_JSON_CONNECTOR":"(<class 'str'>) main_module",
      "APP_JSON_CONTAINER_COUNT":"(<class 'str'>) container_count",
      "APP_JSON_CONTAINER_ID":"(<class 'str'>) container_id",
      "APP_JSON_CONTAINS":"(<class 'str'>) contains",
      "APP_JSON_CONT_DUP":"(<class 'str'>) containers_duplicate",
      "APP_JSON_CONT_FAIL":"(<class 'str'>) containers_failed",
      "APP_JSON_CONT_SUCC":"(<class 'str'>) containers_successful",
      "APP_JSON_DATA":"(<class 'str'>) data",
      "APP_JSON_DATA_TYPE":"(<class 'str'>) data_type",
      "APP_JSON_DEBUG_LEVEL":"(<class 'str'>) debug_level",
      "APP_JSON_DEC_KEY":"(<class 'str'>) dec_key",
      "APP_JSON_DESCRIPTION":"(<class 'str'>) description",
      "APP_JSON_DEVICE":"(<class 'str'>) device",
      "APP_JSON_DOMAIN":"(<class 'str'>) domain",
      "APP_JSON_DOWNLOAD":"(<class 'str'>) download",
      "APP_JSON_ENDPOINT":"(<class 'str'>) endpoint",
      "APP_JSON_END_TIME":"(<class 'str'>) end_time",
      "APP_JSON_ENV_VARS":"(<class 'str'>) environment_variables",
      "APP_JSON_ERROR_DETAILS":"(<class 'str'>) error_details",
      "APP_JSON_EXCEPTION_OCCURED":"(<class 'str'>) exception_occured",
      "APP_JSON_EXTRA_DATA":"(<class 'str'>) extra_data",
      "APP_JSON_HASH":"(<class 'str'>) hash",
      "APP_JSON_HOST":"(<class 'str'>) host",
      "APP_JSON_HOSTNAME":"(<class 'str'>) hostname",
      "APP_JSON_INFO":"(<class 'str'>) info",
      "APP_JSON_INGEST_CONNECTOR_ID":"(<class 'str'>) ingest_app_id",
      "APP_JSON_IP":"(<class 'str'>) ip",
      "APP_JSON_IPC_ACTION_NAME":"(<class 'str'>) action",
      "APP_JSON_IPC_ACTION_RUN_ID":"(<class 'str'>) action_run_id",
      "APP_JSON_IPC_APP_RUN_ID":"(<class 'str'>) connector_run_id",
      "APP_JSON_IPC_RESULT":"(<class 'str'>) result",
      "APP_JSON_IPC_RESULT_DATA":"(<class 'str'>) result_data",
      "APP_JSON_IP_HOSTNAME":"(<class 'str'>) ip_hostname",
      "APP_JSON_IP_MACADDRESS":"(<class 'str'>) ip_macaddress",
      "APP_JSON_LABEL":"(<class 'str'>) label",
      "APP_JSON_LOCK":"(<class 'str'>) lock",
      "APP_JSON_LOCK_CONCURRENCY":"(<class 'str'>) concurrency",
      "APP_JSON_LOCK_DATA_PATH":"(<class 'str'>) data_path",
      "APP_JSON_LOCK_DEFAULT_NAME":"(<class 'str'>) default_name",
      "APP_JSON_LOCK_ENABLED":"(<class 'str'>) enabled",
      "APP_JSON_LOCK_NAME":"(<class 'str'>) name",
      "APP_JSON_LOCK_TIMEOUT":"(<class 'str'>) timeout",
      "APP_JSON_MACADDRESS":"(<class 'str'>) macaddress",
      "APP_JSON_MACHINE_IP_NAME":"(<class 'str'>) machine_ip_name",
      "APP_JSON_MACHINE_NAME":"(<class 'str'>) machine_name",
      "APP_JSON_MESSAGE":"(<class 'str'>) message",
      "APP_JSON_NAME":"(<class 'str'>) name",
      "APP_JSON_PARAMETERS":"(<class 'str'>) parameters",
      "APP_JSON_PARAM_CONTEXT":"(<class 'str'>) context",
      "APP_JSON_PASSWORD":"(<class 'str'>) password",
      "APP_JSON_PATH":"(<class 'str'>) path",
      "APP_JSON_PID":"(<class 'str'>) pid",
      "APP_JSON_PORT":"(<class 'str'>) port",
      "APP_JSON_PROCESS":"(<class 'str'>) process",
      "APP_JSON_PRODUCT_NAME":"(<class 'str'>) product_name",
      "APP_JSON_PRODUCT_VENDOR":"(<class 'str'>) product_vendor",
      "APP_JSON_PRODUCT_VERSION_REGEX":"(<class 'str'>) product_version_regex",
      "APP_JSON_RESULT_DATA":"(<class 'str'>) result_data",
      "APP_JSON_RESULT_SUMMARY":"(<class 'str'>) result_summary",
      "APP_JSON_RES_PARAMS":"(<class 'str'>) parameter",
      "APP_JSON_RUN_AUTOMATION":"(<class 'str'>) run_automation",
      "APP_JSON_SERVER":"(<class 'str'>) server",
      "APP_JSON_SIZE":"(<class 'str'>) size",
      "APP_JSON_START_TIME":"(<class 'str'>) start_time",
      "APP_JSON_STATE":"(<class 'str'>) state",
      "APP_JSON_STATUS":"(<class 'str'>) status",
      "APP_JSON_SUMMARY":"(<class 'str'>) summary",
      "APP_JSON_SYSTEM":"(<class 'str'>) system",
      "APP_JSON_TIMEZONE":"(<class 'str'>) timezone",
      "APP_JSON_TOTAL_OBJECTS_SUCCESS":"(<class 'str'>) total_objects_successful",
      "APP_JSON_TOTAL_OBJECTS_TO_ACT_ON":"(<class 'str'>) total_objects",
      "APP_JSON_TYPE":"(<class 'str'>) type",
      "APP_JSON_URL":"(<class 'str'>) url",
      "APP_JSON_USERNAME":"(<class 'str'>) username",
      "APP_JSON_VAULT_ID":"(<class 'str'>) vault_id",
      "APP_JSON_VERIFY":"(<class 'str'>) verify_server_cert",
      "APP_NO_CMDS_FOUND":"(<class 'str'>) No action executions found",
      "APP_PROG_ADDING_TO_VAULT":"(<class 'str'>) Adding file to vault",
      "APP_PROG_CONNECTED_TO_SERVER":"(<class 'str'>) Connected to server: '{server}'",
      "APP_PROG_CONNECTING_TO_ELLIPSES":"(<class 'str'>) Connecting to {}...",
      "APP_PROG_CONNECTING_WITH_URL":"(<class 'str'>) URL = '{}'",
      "APP_PROG_DOWNLOADING_FILE_FROM_TO":"(<class 'str'>) Saving file from {src} to {dest}",
      "APP_PROG_FILE_SIZE":"(<class 'str'>) File size = {value} {type}",
      "APP_PROG_FINISHED_DOWNLOADING_STATUS":"(<class 'str'>) Finished downloading {value} {type}",
      "APP_PROG_LOADED_CONFIG":"(<class 'str'>) Loaded action execution configuration",
      "APP_SUCCESS":"(<class 'bool'>) True",
      "APP_SUCCESS_STR":"(<class 'str'>) success",
      "APP_SUCC_ALL_CMDS":"(<class 'str'>) 100% of action executions succeeded",
      "APP_SUCC_CMD_EXEC":"(<class 'str'>) Action execution succeeded",
      "APP_SUCC_CONN_RUN":"(<class 'str'>) Connector run successful",
      "APP_SUCC_FILE_ADD_TO_VAULT":"(<class 'str'>) File added to vault",
      "APP_SUCC_FILE_DOWNLOAD":"(<class 'str'>) File download successful",
      "APP_SUCC_PROGRESS":"(<class 'int'>) 1",
      "APP_SUCC_PROGRESS_STR":"(<class 'str'>) running",
      "APP_SUCC_SOME_CMDS":"(<class 'str'>) Errors: {total_failures}",
      "APP_SUCC_STOP":"(<class 'int'>) 2",
      "APP_SUCC_STOP_STR":"(<class 'str'>) stop",
      "ARTIFACT_BATCH_SIZE":"(<class 'int'>) 100",
      "ASSET_HTTPS_PROXY":"(<class 'str'>) ASSET_HTTPS_PROXY",
      "ASSET_HTTP_PROXY":"(<class 'str'>) ASSET_HTTP_PROXY",
      "ActionCancelException":"function(reason_msg=None) -> None",
      "ActionResult":"function(param=None) -> None",
      "Any":"function(*args, **kwds)",
      "BaseConnector":"function() -> None",
      "CEF_JSON":"(<class 'dict'>) {'act': {'contains': []}, 'app': {'contains': []}, 'applicationProtocol': {'contains': []}, 'baseEventCount': {'contains': []}, 'bytesIn': {'contains': []}, 'bytesOut': {'contains': []}, 'cat': {'contains': []}, 'cn1': {'contains': []}, 'cn1Label': {'contains': []}, 'cn2': {'contains': []}, 'cn2Label': {'contains': []}, 'cn3': {'contains': []}, 'cn3Label': {'contains': []}, 'cnt': {'contains': []}, 'cs1': {'contains': []}, 'cs1Label': {'contains': []}, 'cs2': {'contains': []}, 'cs2Label': {'contains': []}, 'cs3': {'contains': []}, 'cs3Label': {'contains': []}, 'cs4': {'contains': []}, 'cs4Label': {'contains': []}, 'cs5': {'contains': []}, 'cs5Label': {'contains': []}, 'cs6': {'contains': []}, 'cs6Label': {'contains': []}, 'destinationAddress': {'contains': ['ip']}, 'destinationDnsDomain': {'contains': ['domain']}, 'destinationHostName': {'contains': ['host name']}, 'destinationMacAddress': {'contains': ['mac address']}, 'destinationNtDomain': {'contains': []}, 'destinationPort': {'contains': ['port']}, 'destinationProcessName': {'contains': ['process name']}, 'destinationServiceName': {'contains': ['process name']}, 'destinationTranslatedAddress': {'contains': ['ip']}, 'destinationTranslatedPort': {'contains': ['port']}, 'destinationUserId': {'contains': []}, 'destinationUserName': {'contains': ['user name']}, 'destinationUserPrivileges': {'contains': []}, 'deviceAction': {'contains': []}, 'deviceAddress': {'contains': ['ip']}, 'deviceCustomDate1': {'contains': []}, 'deviceCustomDate1Label': {'contains': []}, 'deviceCustomDate2': {'contains': []}, 'deviceCustomDate2Label': {'contains': []}, 'deviceCustomNumber1': {'contains': []}, 'deviceCustomNumber1Label': {'contains': []}, 'deviceCustomNumber2': {'contains': []}, 'deviceCustomNumber2Label': {'contains': []}, 'deviceCustomNumber3': {'contains': []}, 'deviceCustomNumber3Label': {'contains': []}, 'deviceCustomString1': {'contains': []}, 'deviceCustomString1Label': {'contains': []}, 'deviceCustomString2': {'contains': []}, 'deviceCustomString2Label': {'contains': []}, 'deviceCustomString3': {'contains': []}, 'deviceCustomString3Label': {'contains': []}, 'deviceCustomString4': {'contains': []}, 'deviceCustomString4Label': {'contains': []}, 'deviceCustomString5': {'contains': []}, 'deviceCustomString5Label': {'contains': []}, 'deviceCustomString6': {'contains': []}, 'deviceCustomString6Label': {'contains': []}, 'deviceDirection': {'contains': []}, 'deviceDnsDomain': {'contains': ['domain']}, 'deviceEventCategory': {'contains': []}, 'deviceExternalId': {'contains': []}, 'deviceFacility': {'contains': []}, 'deviceHostname': {'contains': ['host name']}, 'deviceInboundInterface': {'contains': []}, 'deviceMacAddress': {'contains': ['mac address']}, 'deviceOutboundInterface': {'contains': []}, 'deviceProcessName': {'contains': ['process name']}, 'deviceTranslatedAddress': {'contains': ['ip']}, 'dhost': {'contains': ['host name']}, 'dmac': {'contains': ['mac address']}, 'dntdom': {'contains': ['domain']}, 'dpriv': {'contains': []}, 'dproc': {'contains': ['process name']}, 'dpt': {'contains': ['port']}, 'dst': {'contains': ['ip']}, 'duid': {'contains': []}, 'duser': {'contains': ['user name']}, 'dvc': {'contains': ['ip']}, 'dvchost': {'contains': ['host name']}, 'end': {'contains': []}, 'endTime': {'contains': []}, 'externalId': {'contains': []}, 'eventOutcome': {'contains': []}, 'fileCreateTime': {'contains': []}, 'fileHash': {'contains': ['hash']}, 'fileHashMd5': {'contains': ['md5']}, 'fileHashSha1': {'contains': ['sha1']}, 'fileHashSha256': {'contains': ['sha256']}, 'fileHashSha512': {'contains': ['sha512']}, 'fileId': {'contains': []}, 'fileModificationTime': {'contains': []}, 'fileName': {'contains': ['file name']}, 'filePath': {'contains': ['file path']}, 'filePermission': {'contains': []}, 'fileSize': {'contains': []}, 'fileType': {'contains': []}, 'fname': {'contains': ['file name']}, 'fsize': {'contains': []}, 'in': {'contains': []}, 'message': {'contains': []}, 'msg': {'contains': []}, 'oldfileCreateTime': {'contains': []}, 'oldfileHash': {'contains': ['hash']}, 'oldfileId': {'contains': []}, 'oldfileModificationTime': {'contains': []}, 'oldfileName': {'contains': ['file name']}, 'oldfilePath': {'contains': ['file path']}, 'oldfilePermission': {'contains': []}, 'oldfileType': {'contains': []}, 'oldfsize': {'contains': []}, 'out': {'contains': []}, 'outcome': {'contains': []}, 'proto': {'contains': []}, 'receiptTime': {'contains': []}, 'request': {'contains': []}, 'requestClientApplication': {'contains': []}, 'requestCookies': {'contains': []}, 'requestMethod': {'contains': []}, 'requestURL': {'contains': ['url']}, 'rt': {'contains': []}, 'shost': {'contains': ['host name']}, 'smac': {'contains': ['mac address']}, 'sntdom': {'contains': ['domain']}, 'sourceAddress': {'contains': ['ip']}, 'sourceDnsDomain': {'contains': ['domain']}, 'sourceHostName': {'contains': ['host name']}, 'sourceMacAddress': {'contains': ['mac address']}, 'sourceNtDomain': {'contains': []}, 'sourcePort': {'contains': ['port']}, 'sourceServiceName': {'contains': []}, 'sourceTranslatedAddress': {'contains': ['ip']}, 'sourceTranslatedPort': {'contains': ['port']}, 'sourceUserId': {'contains': []}, 'sourceUserName': {'contains': ['user name']}, 'sourceUserPrivileges': {'contains': []}, 'spriv': {'contains': []}, 'spt': {'contains': ['port']}, 'src': {'contains': ['ip']}, 'start': {'contains': []}, 'startTime': {'contains': []}, 'suid': {'contains': []}, 'suser': {'contains': ['user name']}, 'transportProtocol': {'contains': []}, 'vaultId': {'contains': ['vault id']}}",
      "CEF_NAME_MAPPING":"(<class 'dict'>) {'act': 'deviceAction', 'app': 'applicationProtocol', 'applicationProtocol': 'app', 'baseEventCount': 'cnt', 'bytesIn': 'in', 'bytesOut': 'out', 'cat': 'deviceEventCategory', 'cn1': 'deviceCustomNumber1', 'cn1Label': 'deviceCustomNumber1Label', 'cn2': 'deviceCustomNumber2', 'cn2Label': 'deviceCustomNumber2Label', 'cn3': 'deviceCustomNumber3', 'cn3Label': 'deviceCustomNumber3Label', 'cnt': 'baseEventCount', 'cs1': 'deviceCustomString1', 'cs1Label': 'deviceCustomString1Label', 'cs2': 'deviceCustomString2', 'cs2Label': 'deviceCustomString2Label', 'cs3': 'deviceCustomString3', 'cs3Label': 'deviceCustomString3Label', 'cs4': 'deviceCustomString4', 'cs4Label': 'deviceCustomString4Label', 'cs5': 'deviceCustomString5', 'cs5Label': 'deviceCustomString5Label', 'cs6': 'deviceCustomString6', 'cs6Label': 'deviceCustomString6Label', 'destinationAddress': 'dst', 'destinationDnsDomain': 'destinationDnsDomain', 'destinationHostName': 'dhost', 'destinationMacAddress': 'dmac', 'destinationNtDomain': 'dntdom', 'destinationPort': 'dpt', 'destinationProcessName': 'dproc', 'destinationServiceName': 'destinationServiceName', 'destinationTranslatedAddress': 'destinationTranslatedAddress', 'destinationTranslatedPort': 'destinationTranslatedPort', 'destinationUserId': 'duid', 'destinationUserName': 'duser', 'destinationUserPrivileges': 'dpriv', 'deviceAction': 'act', 'deviceAddress': 'dvc', 'deviceCustomDate1': 'deviceCustomDate1', 'deviceCustomDate1Label': 'deviceCustomDate1Label', 'deviceCustomDate2': 'deviceCustomDate2', 'deviceCustomDate2Label': 'deviceCustomDate2Label', 'deviceCustomNumber1': 'cn1', 'deviceCustomNumber1Label': 'cn1Label', 'deviceCustomNumber2': 'cn2', 'deviceCustomNumber2Label': 'cn2Label', 'deviceCustomNumber3': 'cn3', 'deviceCustomNumber3Label': 'cn3Label', 'deviceCustomString1': 'cs1', 'deviceCustomString1Label': 'cs1Label', 'deviceCustomString2': 'cs2', 'deviceCustomString2Label': 'cs2Label', 'deviceCustomString3': 'cs3', 'deviceCustomString3Label': 'cs3Label', 'deviceCustomString4': 'cs4', 'deviceCustomString4Label': 'cs4Label', 'deviceCustomString5': 'cs5', 'deviceCustomString5Label': 'cs5Label', 'deviceCustomString6': 'cs6', 'deviceCustomString6Label': 'cs6Label', 'deviceDirection': 'deviceDirection', 'deviceDnsDomain': 'deviceDnsDomain', 'deviceEventCategory': 'cat', 'deviceExternalId': 'deviceExternalId', 'deviceFacility': 'deviceFacility', 'deviceHostname': 'dvchost', 'deviceInboundInterface': 'deviceInboundInterface', 'deviceMacAddress': 'deviceMacAddress', 'deviceOutboundInterface': 'deviceOutboundInterface', 'deviceProcessName': 'deviceProcessName', 'deviceTranslatedAddress': 'deviceTranslatedAddress', 'dhost': 'destinationHostName', 'dmac': 'destinationMacAddress', 'dntdom': 'destinationNtDomain', 'dpriv': 'destinationUserPrivileges', 'dproc': 'destinationProcessName', 'dpt': 'destinationPort', 'dst': 'destinationAddress', 'duid': 'destinationUserId', 'duser': 'destinationUserName', 'dvc': 'deviceAddress', 'dvchost': 'deviceHostname', 'end': 'endTime', 'endTime': 'end', 'externalId': 'externalId', 'eventOutcome': 'outcome', 'fileCreateTime': 'fileCreateTime', 'fileHash': 'fileHash', 'fileHashMd5': 'fileHashMd5', 'fileHashSha1': 'fileHashSha1', 'fileHashSha256': 'fileHashSha256', 'fileHashSha512': 'fileHashSha512', 'fileId': 'fileId', 'fileModificationTime': 'fileModificationTime', 'fileName': 'fileName', 'filePath': 'filePath', 'filePermission': 'filePermission', 'fileSize': 'fSize', 'fileType': 'fileType', 'fname': 'fileName', 'fsize': 'fileSize', 'in': 'bytesIn', 'message': 'msg', 'msg': 'message', 'oldfileCreateTime': 'oldfileCreateTime', 'oldfileHash': 'oldfileHash', 'oldfileId': 'oldfileId', 'oldfileModificationTime': 'oldfileModificationTime', 'oldfileName': 'oldfileName', 'oldfilePath': 'oldfilePath', 'oldfilePermission': 'oldfilePermission', 'oldfileType': 'oldfileType', 'oldfsize': 'oldfsize', 'out': 'bytesOut', 'outcome': 'eventOutcome', 'proto': 'transportProtocol', 'receiptTime': 'rt', 'request': 'requestURL', 'requestClientApplication': 'requestClientApplication', 'requestCookies': 'requestCookies', 'requestMethod': 'requestMethod', 'requestURL': 'request', 'rt': 'receiptTime', 'shost': 'sourceHostName', 'smac': 'sourceMacAddress', 'sntdom': 'sourceNtDomain', 'sourceAddress': 'src', 'sourceDnsDomain': 'sourceDnsDomain', 'sourceHostName': 'shost', 'sourceMacAddress': 'smac', 'sourceNtDomain': 'sntdom', 'sourcePort': 'spt', 'sourceServiceName': 'sourceServiceName', 'sourceTranslatedAddress': 'sourceTranslatedAddress', 'sourceTranslatedPort': 'sourceTranslatedPort', 'sourceUserId': 'suid', 'sourceUserName': 'suser', 'sourceUserPrivileges': 'spriv', 'spriv': 'sourceUserPrivileges', 'spt': 'sourcePort', 'src': 'sourceAddress', 'start': 'startTime', 'startTime': 'start', 'suid': 'sourceUserId', 'suser': 'sourceUserName', 'transportProtocol': 'proto'}",
      "CONTAINS_VALIDATORS":"(<class 'dict'>) {'domain': <function is_domain at 0x7f123bb4c5e0>, 'ip': <function is_ip at 0x7f123bb4c430>, 'hash': <function is_hash at 0x7f123bb4c4c0>, 'sha1': <function is_sha1 at 0x7f123bb4c1f0>, 'sha256': <function is_sha256 at 0x7f123bb4c280>, 'sha512': <function is_sha512 at 0x7f123bb4c310>, 'md5': <function is_md5 at 0x7f123bb4c3a0>, 'host name': <function is_hostname at 0x7f123bb4c670>, 'mac address': <function is_mac at 0x7f123bb4c160>, 'url': <function is_url at 0x7f123bb4c550>, 'email': <function is_email at 0x7f123bb4c700>}",
      "CUSTOM_FUNCITON_RESULT_KEY_OID":"(<class 'str'>) oid",
      "CUSTOM_FUNCTION_RESULT_HEADERS":"(<class 'frozenset'>) frozenset({'message', 'name', 'status', 'custom_function_run_id', 'custom_function_name', 'oid'})",
      "CUSTOM_FUNCTION_RESULT_KEY_CUSTOM_FUNCTION_NAME":"(<class 'str'>) custom_function_name",
      "CUSTOM_FUNCTION_RESULT_KEY_CUSTOM_FUNCTION_RUN_ID":"(<class 'str'>) custom_function_run_id",
      "CUSTOM_FUNCTION_RESULT_KEY_MESSAGE":"(<class 'str'>) message",
      "CUSTOM_FUNCTION_RESULT_KEY_NAME":"(<class 'str'>) name",
      "CUSTOM_FUNCTION_RESULT_KEY_STATUS":"(<class 'str'>) status",
      "ConnectorResult":"function(base_connector=None) -> None",
      "DATA_PATH_MAP":"(<class 'dict'>) {'custom_function_result.loop_state': 'loop_state', 'custom_function_result': 'custom_function_results.*', 'action_result.data': 'result_data.*.data', 'action_result.loop_state': 'loop_state', 'action_result.summary': 'result_data.*.summary', 'action_result.parameter': 'result_data.*.parameter', 'action_result.message': 'result_data.*.message', 'action_result.status': 'result_data.*.status', 'action_result.context': 'result_data.*.context', 'action_result.id': 'result_data.*.id', 'summary': 'result_summary', 'artifact:*.cef': 'cef'}",
      "DEFAULT_LOCK_TIMEOUT":"(<class 'int'>) 1200",
      "DEFAULT_REST_BASE_URL":"(<class 'str'>) https://127.0.0.1/rest/",
      "DataType":"function(value, names=None, *, module=None, qualname=None, type=None, start=1)",
      "DeprecationStatus":"function(value, names=None, *, module=None, qualname=None, type=None, start=1)",
      "ENCRYPTED_DATA_TYPE":"(<class 'list'>) ['password']",
      "Enum":"function(value, names=None, *, module=None, qualname=None, type=None, start=1)",
      "FILTERED_PLAYBOOK_INPUT_RESULTS_DP_IDENTIFIER":"(<class 'str'>) filtered-playbook_input_results:",
      "FILTERED_PLAYBOOK_OUTPUT_RESULTS_DP_IDENTIFIER":"(<class 'str'>) filtered-playbook_output_results:",
      "GET_ALL":"(<class 'str'>) all",
      "GET_NEW":"(<class 'str'>) new",
      "INVALID_FOR_ONPREM_STATE":"(<class 'str'>) INVALID_FOR_ONPREM_STATE",
      "Iterator":"function()",
      "JSONDecodeError":"function(msg, doc, pos)",
      "JsonTranslator":"function(skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, encoding='utf-8', default=None, use_decimal=True, namedtuple_as_object=True, tuple_as_array=True, bigint_as_string=False, item_sort_key=None, for_json=False, ignore_nan=False, int_as_string_bitcount=None, iterable_as_array=False)",
      "KILL_CHAIN_ACTIONS_ON_OBJECTIVES":"(<class 'str'>) actions_on_objectives",
      "KILL_CHAIN_CNC":"(<class 'str'>) cnc",
      "KILL_CHAIN_DELIVERY":"(<class 'str'>) delivery",
      "KILL_CHAIN_EXPLOITATION":"(<class 'str'>) exploitation",
      "KILL_CHAIN_INSTALLATION":"(<class 'str'>) installation",
      "KILL_CHAIN_LIST":"(<class 'list'>) ['reconnaissance', 'weaponization', 'delivery', 'exploitation', 'installation', 'cnc', 'actions_on_objectives']",
      "KILL_CHAIN_RECON":"(<class 'str'>) reconnaissance",
      "KILL_CHAIN_WEAPONIZATION":"(<class 'str'>) weaponization",
      "MAX_COUNT_VALUE":"(<class 'int'>) 4294967295",
      "NAMED_PLAYBOOK_INPUT_DP_IDENTIFIER":"(<class 'str'>) :playbook_input:",
      "NAMED_PLAYBOOK_OUTPUT_DP_IDENTIFIER":"(<class 'str'>) :playbook_output:",
      "NOTE_FORMAT_HTML":"(<class 'str'>) html",
      "NOTE_FORMAT_MARKDOWN":"(<class 'str'>) markdown",
      "ON_FINISH_FN_NAME":"(<class 'str'>) on_finish",
      "ObjectParameterContext":"function(data_path: str = '', config: dict[str, dict[str, typing.Any]] = <factory>, data: dict[str, typing.Any] = <factory>, hidden_keys: set[str] = <factory>) -> None",
      "Optional":"function(*args, **kwds)",
      "PHANTOM_APP_STATES":"(<class 'str'>) /home/phantomuser/phantom/local_data/app_states",
      "PHANTOM_BASE_URL":"(<class 'str'>) https://localhost:8443",
      "PHANTOM_ENCODING":"(<class 'str'>) utf-8",
      "PHANTOM_HOME":"(<class 'str'>) /home/phantomuser/phantom",
      "PLAYBOOK_INFO_DATA_FIELD":"(<class 'str'>) launching_user",
      "PLAYBOOK_INPUT_DP_IDENTIFIER":"(<class 'str'>) playbook_input:",
      "PLAYBOOK_INPUT_RESULTS_DATA_FIELD":"(<class 'str'>) playbook_input_results",
      "PLAYBOOK_INPUT_RUN_NAME_KEY":"(<class 'str'>) :playbook_input:",
      "PLAYBOOK_OUTPUT_RESULTS_DATA_FIELD":"(<class 'str'>) playbook_output_results",
      "PLAYBOOK_OUTPUT_RUN_NAME_KEY":"(<class 'str'>) :playbook_output:",
      "PLAYBOOK_RUN_NAME_KEY":"(<class 'str'>) playbook",
      "PRODUCT_NAME":"(<class 'str'>) Splunk SOAR",
      "ParameterContext":"function(data_path: str = '', config: dict[str, dict[str, typing.Any]] = <factory>) -> None",
      "ParameterProcessor":"function(root_parameter_config: dict[str, dict[str, typing.Any]]) -> None",
      "PylibConfig":"function()",
      "REST_BASE_URL":"(<class 'str'>) https://localhost:8443/rest/",
      "SENSITIVITY_AMBER":"(<class 'str'>) amber",
      "SENSITIVITY_GREEN":"(<class 'str'>) green",
      "SENSITIVITY_LIST":"(<class 'list'>) ['red', 'amber', 'green', 'white']",
      "SENSITIVITY_RED":"(<class 'str'>) red",
      "SENSITIVITY_WHITE":"(<class 'str'>) white",
      "SENTENCE_ENDING_PUNCTUATION":"(<class 'tuple'>) ('.', '!', '?')",
      "SEVERITY_HIGH":"(<class 'str'>) high",
      "SEVERITY_LIST":"(<class 'list'>) ['low', 'medium', 'high']",
      "SEVERITY_LOW":"(<class 'str'>) low",
      "SEVERITY_MEDIUM":"(<class 'str'>) medium",
      "SOAR_HTTPS_PROXY":"(<class 'str'>) SOAR_HTTPS_PROXY",
      "SOAR_HTTP_PROXY":"(<class 'str'>) SOAR_HTTP_PROXY",
      "Union":"function(*args, **kwds)",
      "abc":"(<class 'module'>) <module 'abc' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/abc.py'>",
      "base_connector_defunct_api":"function(condition=True, message='') -> None",
      "base_playbook_api":"function()",
      "bytes_to_human_readable_size_str":"function(n: int) -> str",
      "chunk":"function(s: str, chunk_size: int) -> collections.abc.Iterator[str]",
      "cloud_only":"function(func)",
      "compat":"(<class 'module'>) <module 'phantom_common.compat' from '/home/phantomuser/phantom/pycommon3/phantom_common/compat.pyc'>",
      "concatenate":"function(*args, **kwargs)",
      "config":"(<class 'phantom.utils.PylibConfig'>) <phantom.utils.PylibConfig object at 0x7f123bb9eee0>",
      "connector_obj":"(<class 'NoneType'>) None",
      "copy":"(<class 'module'>) <module 'copy' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/copy.py'>",
      "debug_private_error_":"function(message: Any) -> None",
      "debug_private_message_":"function(message: Any) -> None",
      "decode_unicode":"function(arg)",
      "decode_unicode_dict":"function(args) -> None",
      "decode_unicode_list":"function(args) -> None",
      "decode_unicode_parameters":"function(func)",
      "decode_unicode_tuple":"function(args)",
      "deep_copy_dict":"function(d, keys_to_exclude=())",
      "defunct_api":"function(condition=True, message='') -> None",
      "deprecated_api":"function(condition=True, message='') -> None",
      "dump_json":"function(dump_dict, tag=None) -> None",
      "encode_proxy_var":"function(val: str) -> str",
      "encode_unicode":"function(arg)",
      "encode_unicode_dict":"function(args) -> None",
      "encode_unicode_list":"function(args) -> None",
      "encode_unicode_parameters":"function(func)",
      "encode_unicode_tuple":"function(args)",
      "escape_db_key":"function(s: str) -> str",
      "escape_null_chars_in_json_seq":"function(seq: Union[list, dict], processed_seqs: Optional[set] = None) -> None",
      "escape_null_unicode_characters":"function(input_str)",
      "extract_data_paths":"function(json_object_list, paths)",
      "generate_uuid_string":"function() -> str",
      "get_artifact_ids_from_action_result":"function(named_datapath, action_results=None, trace: bool = False)",
      "get_asset_names":"function(action=None, tags=None)",
      "get_cef_data":"function(input_dict, map_dict)",
      "get_file_name_from_url":"function(url, should_unquote: bool = True)",
      "get_host_from_url":"function(url: str) -> Optional[str]",
      "get_list_from_string":"function(comma_seperated_list: str, drop_blanks: bool = True, remove_duplicates: bool = True) -> list[str]",
      "get_phantom_strict_tls":"function() -> bool",
      "get_random_chars":"function(size: int = 6, chars: str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') -> str",
      "get_req_value":"function(in_dict, in_key, strip_it: bool = True) -> str",
      "get_request_iter_pages":"function(base_url: str, params=None, page_size: int = 50, verify=None)",
      "get_str_val":"function(in_dict, in_key, def_val=None, strip_it=True)",
      "get_succ_or_failure_text":"function(status_code)",
      "get_valid_file_name":"function(s: str) -> str",
      "get_value":"function(in_dict, in_key, def_val=None, strip_it=True)",
      "get_values_in_events":"function(events, field_name) -> list[str]",
      "glob":"(<class 'module'>) <module 'glob' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/glob.py'>",
      "identity":"function(obj)",
      "inspect":"(<class 'module'>) <module 'inspect' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/inspect.py'>",
      "install_info":"(<class 'module'>) <module 'phantom_common.install_info' from '/home/phantomuser/phantom/pycommon3/phantom_common/install_info.pyc'>",
      "is_cloud_install":"function() -> bool",
      "is_domain":"function(hostname: str) -> bool",
      "is_email":"function(email_str) -> bool",
      "is_fail":"function(status_code) -> bool",
      "is_hash":"function(hash_str: str) -> bool",
      "is_hostname":"function(hostname: str) -> bool",
      "is_ip":"function(ip_str: str) -> bool",
      "is_mac":"function(mac_str: str) -> bool",
      "is_md5":"function(input_str: str) -> bool",
      "is_sha1":"function(input_str: str) -> bool",
      "is_sha256":"function(input_str: str) -> bool",
      "is_sha512":"function(input_str: str) -> bool",
      "is_success":"function(status_code)",
      "is_url":"function(input_str: str) -> bool",
      "is_windows_path":"function(path: str) -> bool",
      "isfloat":"function(value) -> bool",
      "json":"(<class 'module'>) <module 'simplejson' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/simplejson/__init__.py'>",
      "logger":"(<class 'logging.Logger'>) <Logger phantom.utils (WARNING)>",
      "logging":"(<class 'module'>) <module 'logging' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/logging/__init__.py'>",
      "mission_control_enabled":"function() -> bool",
      "mission_control_only":"function(func)",
      "os":"(<class 'module'>) <module 'os' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/os.py'>",
      "patched_session_request":"function(self, method, url, **kwargs)",
      "ph_consts":"(<class 'module'>) <module 'phantom.consts' from '/home/phantomuser/phantom/lib3/phantom/consts.pyc'>",
      "ph_engine":"(<class 'module'>) <module 'phantom.ph_engine' from '/home/phantomuser/phantom/lib3/phantom/ph_engine.pyc'>",
      "ph_ingest":"(<class 'NoneType'>) None",
      "ph_ipc":"(<class 'NoneType'>) None",
      "ph_jsons":"(<class 'module'>) <module 'phantom.json_keys' from '/home/phantomuser/phantom/lib3/phantom/json_keys.pyc'>",
      "ph_progress":"(<class 'module'>) <module 'phantom.progress' from '/home/phantomuser/phantom/lib3/phantom/progress.pyc'>",
      "ph_redact":"(<class 'module'>) <module 'phantom.redact' from '/home/phantomuser/phantom/lib3/phantom/redact.pyc'>",
      "ph_status":"(<class 'module'>) <module 'phantom.status' from '/home/phantomuser/phantom/lib3/phantom/status.pyc'>",
      "ph_utils":"(<class 'module'>) <module 'phantom.utils' from '/home/phantomuser/phantom/lib3/phantom/utils.pyc'>",
      "phproc":"(<class 'module'>) <module 'phantom_common.phproc' from '/home/phantomuser/phantom/pycommon3/phantom_common/phproc.pyc'>",
      "platform_encryption_backend":"(<class 'phantom_common.encryption.on_prem.OnPremEncryptionStore'>) <phantom_common.encryption.on_prem.OnPremEncryptionStore object at 0x7f123b6343a0>",
      "playbook_api":"function(copy_user_provided_args=True) -> None",
      "print_function":"(<class '__future__._Feature'>) _Feature((2, 6, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 1048576)",
      "quote_plus":"function(string, safe='', encoding=None, errors=None)",
      "random":"(<class 'module'>) <module 'random' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/random.py'>",
      "re":"(<class 'module'>) <module 're' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/re.py'>",
      "remove_none_values":"function(input_dict)",
      "requests":"(<class 'module'>) <module 'requests' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/requests/__init__.py'>",
      "requests_exceptions":"(<class 'module'>) <module 'requests.exceptions' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/requests/exceptions.py'>",
      "run_ext_command":"function(command, dump_ouput: bool = False)",
      "run_ext_command_list":"function(command_list, dump_ouput: bool = False)",
      "safe_int":"function(obj) -> Optional[int]",
      "set_app_file_perms":"function(path: str, recursive: bool = False) -> None",
      "should_bypass_proxies":"function(url, no_proxy)",
      "shutil":"(<class 'module'>) <module 'shutil' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/shutil.py'>",
      "signal":"(<class 'module'>) <module 'signal' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/signal.py'>",
      "sjson":"(<class 'module'>) <module 'simplejson' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/simplejson/__init__.py'>",
      "string":"(<class 'module'>) <module 'string' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/string.py'>",
      "string_types":"(<class 'tuple'>) (<class 'str'>, <class 'bytes'>)",
      "subprocess":"(<class 'module'>) <module 'subprocess' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/subprocess.py'>",
      "tempfile":"(<class 'module'>) <module 'tempfile' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/tempfile.py'>",
      "time":"(<class 'module'>) <module 'time' (built-in)>",
      "to_bool":"function(value)",
      "trace_":"function(show_message: bool, message: Any) -> None",
      "traceback":"(<class 'module'>) <module 'traceback' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/traceback.py'>",
      "unescape_db_key":"function(s: str) -> str",
      "unicode_literals":"(<class '__future__._Feature'>) _Feature((2, 6, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0), 2097152)",
      "unquote":"function(string, encoding='utf-8', errors='replace')",
      "urlparse":"(<class 'module'>) <module 'urllib.parse' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/urllib/parse.py'>",
      "uuid":"(<class 'module'>) <module 'uuid' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/uuid.py'>",
      "validate_value_presense":"function(obj)",
      "wraps":"function(wrapped, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))"
   },
   "phantom.rules":{
      "ACTION_ID_INGEST_ON_POLL":"(<class 'str'>) on_poll",
      "ACTION_ID_INGEST_ON_RECEIVE":"(<class 'str'>) on_receive",
      "ACTION_ID_TEST_ASSET_CONNECTIVITY":"(<class 'str'>) test_asset_connectivity",
      "ACTION_RESULT_HEADERS":"(<class 'frozenset'>) frozenset({'app', 'asset', 'result_data', 'name', 'status', 'action_run_id', 'message', 'summary', 'asset_id', 'action', 'app_id', 'app_run_id'})",
      "ACTION_RESULT_KEYS":"(<class 'frozenset'>) frozenset({'app', 'asset', 'result_data', 'name', 'status', 'action_run_id', 'message', 'summary', 'asset_id', 'action', 'app_id', 'oid', 'action_results', 'app_run_id'})",
      "ACTION_RESULT_KEYS_NO_FLATTENING":"(<class 'frozenset'>) frozenset({'app', 'asset', 'result_data', 'name', 'status', 'action_run_id', 'message', 'summary', 'asset_id', 'action', 'app_id', 'app_run_id'})",
      "ACTION_RESULT_KEY_ACTION":"(<class 'str'>) action",
      "ACTION_RESULT_KEY_ACTION_RESULTS":"(<class 'str'>) action_results",
      "ACTION_RESULT_KEY_ACTION_RUN_ID":"(<class 'str'>) action_run_id",
      "ACTION_RESULT_KEY_APP":"(<class 'str'>) app",
      "ACTION_RESULT_KEY_APP_ID":"(<class 'str'>) app_id",
      "ACTION_RESULT_KEY_APP_RUN_ID":"(<class 'str'>) app_run_id",
      "ACTION_RESULT_KEY_ASSET":"(<class 'str'>) asset",
      "ACTION_RESULT_KEY_ASSET_ID":"(<class 'str'>) asset_id",
      "ACTION_RESULT_KEY_MESSAGE":"(<class 'str'>) message",
      "ACTION_RESULT_KEY_NAME":"(<class 'str'>) name",
      "ACTION_RESULT_KEY_OID":"(<class 'str'>) oid",
      "ACTION_RESULT_KEY_RESULT_DATA":"(<class 'str'>) result_data",
      "ACTION_RESULT_KEY_STATUS":"(<class 'str'>) status",
      "ACTION_RESULT_KEY_SUMMARY":"(<class 'str'>) summary",
      "APP_DEFAULT_ARTIFACT_LABEL":"(<class 'str'>) artifact",
      "APP_DEFAULT_ARTIFACT_TYPE":"(<class 'str'>) network",
      "APP_DEFAULT_CONTAINER_LABEL":"(<class 'str'>) incident",
      "APP_ERROR":"(<class 'bool'>) False",
      "APP_ERROR_STR":"(<class 'str'>) failed",
      "APP_ERR_ACTION_APP_CONFIG_DICT_NOT_FOUND":"(<class 'str'>) No App config dictionary present in Action JSON",
      "APP_ERR_ACTION_CONFIG_DICT_NOT_FOUND":"(<class 'str'>) No Config dictionary present in Action JSON",
      "APP_ERR_ACTION_DICT_MULTI_FOUND":"(<class 'str'>) Multiple action infos for '{action_id}' in App JSON should contain only one",
      "APP_ERR_ACTION_DICT_NOT_FOUND":"(<class 'str'>) Unknown action. Unable to find action info for '{action_id}' in App JSON",
      "APP_ERR_ALL_CMDS":"(<class 'str'>) 100% of action executions failed",
      "APP_ERR_APP_JSON_LOAD":"(<class 'str'>) Failed to load the app JSON",
      "APP_ERR_ASSET_ID_LOCK_INVALID":"(<class 'str'>) Asset configuration (like the 'asset id') not found in the configuration sent to the app",
      "APP_ERR_CMD_EXEC":"(<class 'str'>) Action execution failed",
      "APP_ERR_CONNECTOR_RUN_JSON_LOAD":"(<class 'str'>) Failed to load the connector run JSON. Missing or invalid '{key}'",
      "APP_ERR_CONN_RUN":"(<class 'str'>) Connector run failed",
      "APP_ERR_DECRYPT_KEY":"(<class 'str'>) Unable to decrypt {dict_name} key '{key}'",
      "APP_ERR_DECRYPT_KEY_NO_KEY":"(<class 'str'>) Decryption key not passed. Unable to decrypt {dict_name} key '{key}'",
      "APP_ERR_EXCEPTION_OCCURED":"(<class 'str'>) Exception Occurred",
      "APP_ERR_FILE_ADD_TO_VAULT":"(<class 'str'>) Failed to add file to vault",
      "APP_ERR_INGEST_MODULE_NOT_FOUND":"(<class 'str'>) Splunk SOAR ingest module not found",
      "APP_ERR_INITIALIZE_DID_NOT_RETURN_A_VALUE":"(<class 'str'>) {classname}::initialize() did not return a 'mandotary' status code",
      "APP_ERR_JSON_ACTION_PARAM_DICT_NOT_FOUND":"(<class 'str'>) Parameter dict not found for action '{action_id}' in App JSON",
      "APP_ERR_JSON_CONFIG_DICT_NOT_FOUND":"(<class 'str'>) No configuration dictionary present in the app JSON",
      "APP_ERR_LOCK_ACQUIRE":"(<class 'str'>) Failed to acquire lock",
      "APP_ERR_LOCK_ACQUIRE_NAMED":"(<class 'str'>) Failed to acquire lock named '{lock_name}' for Action: '{action_name}', App: '{app_name}'",
      "APP_ERR_LOCK_DATA_PATH_INVALID":"(<class 'str'>) Data path: {0} value cannot be used as a lock name",
      "APP_ERR_LOCK_KEY_NOT_FOUND":"(<class 'str'>) Key '{key_name}' not found in the {dict_type} JSON sent to the app",
      "APP_ERR_LOCK_MODULE_UNAVAILABLE":"(<class 'str'>) Backend module required to carry out Lock/UnLock operations is unavailable",
      "APP_ERR_LOCK_OBJECT_ALREADY_USED":"(<class 'str'>) Object already used once, multiple uses of object is not allowed",
      "APP_ERR_LOCK_OBJECT_NAME_NONE":"(<class 'str'>) Lock name not set. Please lock first",
      "APP_ERR_LOCK_OBJECT_UNLOCKED":"(<class 'str'>) Object not in locked state. Unlock operation not possible",
      "APP_ERR_NYI":"(<class 'str'>) Not yet implemented",
      "APP_ERR_UNK_CMD":"(<class 'str'>) Unknown Action: {action_identifier}",
      "APP_INGEST_ACTIONS":"(<class 'list'>) ['on_poll', 'poll_now']",
      "APP_INITIALIZE_RETURNED_ERROR":"(<class 'str'>) {classname}::initialize() returned error",
      "APP_JSON_ACTIONS":"(<class 'str'>) actions",
      "APP_JSON_ACTION_CANCELLED":"(<class 'str'>) action_cancelled",
      "APP_JSON_ACTION_IDENTIFIER":"(<class 'str'>) identifier",
      "APP_JSON_ACTION_NAME":"(<class 'str'>) action",
      "APP_JSON_ALLOW_LIST":"(<class 'str'>) allow_list",
      "APP_JSON_APP_CONFIG":"(<class 'str'>) app_config",
      "APP_JSON_APP_ID":"(<class 'str'>) appid",
      "APP_JSON_APP_NAME":"(<class 'str'>) name",
      "APP_JSON_APP_RUN_ID":"(<class 'str'>) app_run_id",
      "APP_JSON_ARTIFACT_COUNT":"(<class 'str'>) artifact_count",
      "APP_JSON_ART_DUP":"(<class 'str'>) artifacts_duplicate",
      "APP_JSON_ART_FAIL":"(<class 'str'>) artifacts_failed",
      "APP_JSON_ART_SUCC":"(<class 'str'>) artifacts_successful",
      "APP_JSON_ASSET_ID":"(<class 'str'>) asset_id",
      "APP_JSON_CONFIG":"(<class 'str'>) config",
      "APP_JSON_CONFIGURATION":"(<class 'str'>) configuration",
      "APP_JSON_CONFIGURATION_REQUIRED":"(<class 'str'>) required",
      "APP_JSON_CONFIG_PARAMETERS":"(<class 'str'>) parameters",
      "APP_JSON_CONNECTOR":"(<class 'str'>) main_module",
      "APP_JSON_CONTAINER_COUNT":"(<class 'str'>) container_count",
      "APP_JSON_CONTAINER_ID":"(<class 'str'>) container_id",
      "APP_JSON_CONTAINS":"(<class 'str'>) contains",
      "APP_JSON_CONT_DUP":"(<class 'str'>) containers_duplicate",
      "APP_JSON_CONT_FAIL":"(<class 'str'>) containers_failed",
      "APP_JSON_CONT_SUCC":"(<class 'str'>) containers_successful",
      "APP_JSON_DATA":"(<class 'str'>) data",
      "APP_JSON_DATA_TYPE":"(<class 'str'>) data_type",
      "APP_JSON_DEBUG_LEVEL":"(<class 'str'>) debug_level",
      "APP_JSON_DEC_KEY":"(<class 'str'>) dec_key",
      "APP_JSON_DESCRIPTION":"(<class 'str'>) description",
      "APP_JSON_DEVICE":"(<class 'str'>) device",
      "APP_JSON_DOMAIN":"(<class 'str'>) domain",
      "APP_JSON_DOWNLOAD":"(<class 'str'>) download",
      "APP_JSON_ENDPOINT":"(<class 'str'>) endpoint",
      "APP_JSON_END_TIME":"(<class 'str'>) end_time",
      "APP_JSON_ENV_VARS":"(<class 'str'>) environment_variables",
      "APP_JSON_ERROR_DETAILS":"(<class 'str'>) error_details",
      "APP_JSON_EXCEPTION_OCCURED":"(<class 'str'>) exception_occured",
      "APP_JSON_EXTRA_DATA":"(<class 'str'>) extra_data",
      "APP_JSON_HASH":"(<class 'str'>) hash",
      "APP_JSON_HOST":"(<class 'str'>) host",
      "APP_JSON_HOSTNAME":"(<class 'str'>) hostname",
      "APP_JSON_INFO":"(<class 'str'>) info",
      "APP_JSON_INGEST_CONNECTOR_ID":"(<class 'str'>) ingest_app_id",
      "APP_JSON_IP":"(<class 'str'>) ip",
      "APP_JSON_IPC_ACTION_NAME":"(<class 'str'>) action",
      "APP_JSON_IPC_ACTION_RUN_ID":"(<class 'str'>) action_run_id",
      "APP_JSON_IPC_APP_RUN_ID":"(<class 'str'>) connector_run_id",
      "APP_JSON_IPC_RESULT":"(<class 'str'>) result",
      "APP_JSON_IPC_RESULT_DATA":"(<class 'str'>) result_data",
      "APP_JSON_IP_HOSTNAME":"(<class 'str'>) ip_hostname",
      "APP_JSON_IP_MACADDRESS":"(<class 'str'>) ip_macaddress",
      "APP_JSON_LABEL":"(<class 'str'>) label",
      "APP_JSON_LOCK":"(<class 'str'>) lock",
      "APP_JSON_LOCK_CONCURRENCY":"(<class 'str'>) concurrency",
      "APP_JSON_LOCK_DATA_PATH":"(<class 'str'>) data_path",
      "APP_JSON_LOCK_DEFAULT_NAME":"(<class 'str'>) default_name",
      "APP_JSON_LOCK_ENABLED":"(<class 'str'>) enabled",
      "APP_JSON_LOCK_NAME":"(<class 'str'>) name",
      "APP_JSON_LOCK_TIMEOUT":"(<class 'str'>) timeout",
      "APP_JSON_MACADDRESS":"(<class 'str'>) macaddress",
      "APP_JSON_MACHINE_IP_NAME":"(<class 'str'>) machine_ip_name",
      "APP_JSON_MACHINE_NAME":"(<class 'str'>) machine_name",
      "APP_JSON_MESSAGE":"(<class 'str'>) message",
      "APP_JSON_NAME":"(<class 'str'>) name",
      "APP_JSON_PARAMETERS":"(<class 'str'>) parameters",
      "APP_JSON_PARAM_CONTEXT":"(<class 'str'>) context",
      "APP_JSON_PASSWORD":"(<class 'str'>) password",
      "APP_JSON_PATH":"(<class 'str'>) path",
      "APP_JSON_PID":"(<class 'str'>) pid",
      "APP_JSON_PORT":"(<class 'str'>) port",
      "APP_JSON_PROCESS":"(<class 'str'>) process",
      "APP_JSON_PRODUCT_NAME":"(<class 'str'>) product_name",
      "APP_JSON_PRODUCT_VENDOR":"(<class 'str'>) product_vendor",
      "APP_JSON_PRODUCT_VERSION_REGEX":"(<class 'str'>) product_version_regex",
      "APP_JSON_RESULT_DATA":"(<class 'str'>) result_data",
      "APP_JSON_RESULT_SUMMARY":"(<class 'str'>) result_summary",
      "APP_JSON_RES_PARAMS":"(<class 'str'>) parameter",
      "APP_JSON_RUN_AUTOMATION":"(<class 'str'>) run_automation",
      "APP_JSON_SERVER":"(<class 'str'>) server",
      "APP_JSON_SIZE":"(<class 'str'>) size",
      "APP_JSON_START_TIME":"(<class 'str'>) start_time",
      "APP_JSON_STATE":"(<class 'str'>) state",
      "APP_JSON_STATUS":"(<class 'str'>) status",
      "APP_JSON_SUMMARY":"(<class 'str'>) summary",
      "APP_JSON_SYSTEM":"(<class 'str'>) system",
      "APP_JSON_TIMEZONE":"(<class 'str'>) timezone",
      "APP_JSON_TOTAL_OBJECTS_SUCCESS":"(<class 'str'>) total_objects_successful",
      "APP_JSON_TOTAL_OBJECTS_TO_ACT_ON":"(<class 'str'>) total_objects",
      "APP_JSON_TYPE":"(<class 'str'>) type",
      "APP_JSON_URL":"(<class 'str'>) url",
      "APP_JSON_USERNAME":"(<class 'str'>) username",
      "APP_JSON_VAULT_ID":"(<class 'str'>) vault_id",
      "APP_JSON_VERIFY":"(<class 'str'>) verify_server_cert",
      "APP_NO_CMDS_FOUND":"(<class 'str'>) No action executions found",
      "APP_PROG_ADDING_TO_VAULT":"(<class 'str'>) Adding file to vault",
      "APP_PROG_CONNECTED_TO_SERVER":"(<class 'str'>) Connected to server: '{server}'",
      "APP_PROG_CONNECTING_TO_ELLIPSES":"(<class 'str'>) Connecting to {}...",
      "APP_PROG_CONNECTING_WITH_URL":"(<class 'str'>) URL = '{}'",
      "APP_PROG_DOWNLOADING_FILE_FROM_TO":"(<class 'str'>) Saving file from {src} to {dest}",
      "APP_PROG_FILE_SIZE":"(<class 'str'>) File size = {value} {type}",
      "APP_PROG_FINISHED_DOWNLOADING_STATUS":"(<class 'str'>) Finished downloading {value} {type}",
      "APP_PROG_LOADED_CONFIG":"(<class 'str'>) Loaded action execution configuration",
      "APP_SUCCESS":"(<class 'bool'>) True",
      "APP_SUCCESS_STR":"(<class 'str'>) success",
      "APP_SUCC_ALL_CMDS":"(<class 'str'>) 100% of action executions succeeded",
      "APP_SUCC_CMD_EXEC":"(<class 'str'>) Action execution succeeded",
      "APP_SUCC_CONN_RUN":"(<class 'str'>) Connector run successful",
      "APP_SUCC_FILE_ADD_TO_VAULT":"(<class 'str'>) File added to vault",
      "APP_SUCC_FILE_DOWNLOAD":"(<class 'str'>) File download successful",
      "APP_SUCC_PROGRESS":"(<class 'int'>) 1",
      "APP_SUCC_PROGRESS_STR":"(<class 'str'>) running",
      "APP_SUCC_SOME_CMDS":"(<class 'str'>) Errors: {total_failures}",
      "APP_SUCC_STOP":"(<class 'int'>) 2",
      "APP_SUCC_STOP_STR":"(<class 'str'>) stop",
      "ARTIFACT_BATCH_SIZE":"(<class 'int'>) 100",
      "ActionResult":"function(param=None) -> None",
      "BACKUP_RESTORE_LOCK":"(<class 'str'>) 1002",
      "CEF_JSON":"(<class 'dict'>) {'act': {'contains': []}, 'app': {'contains': []}, 'applicationProtocol': {'contains': []}, 'baseEventCount': {'contains': []}, 'bytesIn': {'contains': []}, 'bytesOut': {'contains': []}, 'cat': {'contains': []}, 'cn1': {'contains': []}, 'cn1Label': {'contains': []}, 'cn2': {'contains': []}, 'cn2Label': {'contains': []}, 'cn3': {'contains': []}, 'cn3Label': {'contains': []}, 'cnt': {'contains': []}, 'cs1': {'contains': []}, 'cs1Label': {'contains': []}, 'cs2': {'contains': []}, 'cs2Label': {'contains': []}, 'cs3': {'contains': []}, 'cs3Label': {'contains': []}, 'cs4': {'contains': []}, 'cs4Label': {'contains': []}, 'cs5': {'contains': []}, 'cs5Label': {'contains': []}, 'cs6': {'contains': []}, 'cs6Label': {'contains': []}, 'destinationAddress': {'contains': ['ip']}, 'destinationDnsDomain': {'contains': ['domain']}, 'destinationHostName': {'contains': ['host name']}, 'destinationMacAddress': {'contains': ['mac address']}, 'destinationNtDomain': {'contains': []}, 'destinationPort': {'contains': ['port']}, 'destinationProcessName': {'contains': ['process name']}, 'destinationServiceName': {'contains': ['process name']}, 'destinationTranslatedAddress': {'contains': ['ip']}, 'destinationTranslatedPort': {'contains': ['port']}, 'destinationUserId': {'contains': []}, 'destinationUserName': {'contains': ['user name']}, 'destinationUserPrivileges': {'contains': []}, 'deviceAction': {'contains': []}, 'deviceAddress': {'contains': ['ip']}, 'deviceCustomDate1': {'contains': []}, 'deviceCustomDate1Label': {'contains': []}, 'deviceCustomDate2': {'contains': []}, 'deviceCustomDate2Label': {'contains': []}, 'deviceCustomNumber1': {'contains': []}, 'deviceCustomNumber1Label': {'contains': []}, 'deviceCustomNumber2': {'contains': []}, 'deviceCustomNumber2Label': {'contains': []}, 'deviceCustomNumber3': {'contains': []}, 'deviceCustomNumber3Label': {'contains': []}, 'deviceCustomString1': {'contains': []}, 'deviceCustomString1Label': {'contains': []}, 'deviceCustomString2': {'contains': []}, 'deviceCustomString2Label': {'contains': []}, 'deviceCustomString3': {'contains': []}, 'deviceCustomString3Label': {'contains': []}, 'deviceCustomString4': {'contains': []}, 'deviceCustomString4Label': {'contains': []}, 'deviceCustomString5': {'contains': []}, 'deviceCustomString5Label': {'contains': []}, 'deviceCustomString6': {'contains': []}, 'deviceCustomString6Label': {'contains': []}, 'deviceDirection': {'contains': []}, 'deviceDnsDomain': {'contains': ['domain']}, 'deviceEventCategory': {'contains': []}, 'deviceExternalId': {'contains': []}, 'deviceFacility': {'contains': []}, 'deviceHostname': {'contains': ['host name']}, 'deviceInboundInterface': {'contains': []}, 'deviceMacAddress': {'contains': ['mac address']}, 'deviceOutboundInterface': {'contains': []}, 'deviceProcessName': {'contains': ['process name']}, 'deviceTranslatedAddress': {'contains': ['ip']}, 'dhost': {'contains': ['host name']}, 'dmac': {'contains': ['mac address']}, 'dntdom': {'contains': ['domain']}, 'dpriv': {'contains': []}, 'dproc': {'contains': ['process name']}, 'dpt': {'contains': ['port']}, 'dst': {'contains': ['ip']}, 'duid': {'contains': []}, 'duser': {'contains': ['user name']}, 'dvc': {'contains': ['ip']}, 'dvchost': {'contains': ['host name']}, 'end': {'contains': []}, 'endTime': {'contains': []}, 'externalId': {'contains': []}, 'eventOutcome': {'contains': []}, 'fileCreateTime': {'contains': []}, 'fileHash': {'contains': ['hash']}, 'fileHashMd5': {'contains': ['md5']}, 'fileHashSha1': {'contains': ['sha1']}, 'fileHashSha256': {'contains': ['sha256']}, 'fileHashSha512': {'contains': ['sha512']}, 'fileId': {'contains': []}, 'fileModificationTime': {'contains': []}, 'fileName': {'contains': ['file name']}, 'filePath': {'contains': ['file path']}, 'filePermission': {'contains': []}, 'fileSize': {'contains': []}, 'fileType': {'contains': []}, 'fname': {'contains': ['file name']}, 'fsize': {'contains': []}, 'in': {'contains': []}, 'message': {'contains': []}, 'msg': {'contains': []}, 'oldfileCreateTime': {'contains': []}, 'oldfileHash': {'contains': ['hash']}, 'oldfileId': {'contains': []}, 'oldfileModificationTime': {'contains': []}, 'oldfileName': {'contains': ['file name']}, 'oldfilePath': {'contains': ['file path']}, 'oldfilePermission': {'contains': []}, 'oldfileType': {'contains': []}, 'oldfsize': {'contains': []}, 'out': {'contains': []}, 'outcome': {'contains': []}, 'proto': {'contains': []}, 'receiptTime': {'contains': []}, 'request': {'contains': []}, 'requestClientApplication': {'contains': []}, 'requestCookies': {'contains': []}, 'requestMethod': {'contains': []}, 'requestURL': {'contains': ['url']}, 'rt': {'contains': []}, 'shost': {'contains': ['host name']}, 'smac': {'contains': ['mac address']}, 'sntdom': {'contains': ['domain']}, 'sourceAddress': {'contains': ['ip']}, 'sourceDnsDomain': {'contains': ['domain']}, 'sourceHostName': {'contains': ['host name']}, 'sourceMacAddress': {'contains': ['mac address']}, 'sourceNtDomain': {'contains': []}, 'sourcePort': {'contains': ['port']}, 'sourceServiceName': {'contains': []}, 'sourceTranslatedAddress': {'contains': ['ip']}, 'sourceTranslatedPort': {'contains': ['port']}, 'sourceUserId': {'contains': []}, 'sourceUserName': {'contains': ['user name']}, 'sourceUserPrivileges': {'contains': []}, 'spriv': {'contains': []}, 'spt': {'contains': ['port']}, 'src': {'contains': ['ip']}, 'start': {'contains': []}, 'startTime': {'contains': []}, 'suid': {'contains': []}, 'suser': {'contains': ['user name']}, 'transportProtocol': {'contains': []}, 'vaultId': {'contains': ['vault id']}}",
      "CEF_NAME_MAPPING":"(<class 'dict'>) {'act': 'deviceAction', 'app': 'applicationProtocol', 'applicationProtocol': 'app', 'baseEventCount': 'cnt', 'bytesIn': 'in', 'bytesOut': 'out', 'cat': 'deviceEventCategory', 'cn1': 'deviceCustomNumber1', 'cn1Label': 'deviceCustomNumber1Label', 'cn2': 'deviceCustomNumber2', 'cn2Label': 'deviceCustomNumber2Label', 'cn3': 'deviceCustomNumber3', 'cn3Label': 'deviceCustomNumber3Label', 'cnt': 'baseEventCount', 'cs1': 'deviceCustomString1', 'cs1Label': 'deviceCustomString1Label', 'cs2': 'deviceCustomString2', 'cs2Label': 'deviceCustomString2Label', 'cs3': 'deviceCustomString3', 'cs3Label': 'deviceCustomString3Label', 'cs4': 'deviceCustomString4', 'cs4Label': 'deviceCustomString4Label', 'cs5': 'deviceCustomString5', 'cs5Label': 'deviceCustomString5Label', 'cs6': 'deviceCustomString6', 'cs6Label': 'deviceCustomString6Label', 'destinationAddress': 'dst', 'destinationDnsDomain': 'destinationDnsDomain', 'destinationHostName': 'dhost', 'destinationMacAddress': 'dmac', 'destinationNtDomain': 'dntdom', 'destinationPort': 'dpt', 'destinationProcessName': 'dproc', 'destinationServiceName': 'destinationServiceName', 'destinationTranslatedAddress': 'destinationTranslatedAddress', 'destinationTranslatedPort': 'destinationTranslatedPort', 'destinationUserId': 'duid', 'destinationUserName': 'duser', 'destinationUserPrivileges': 'dpriv', 'deviceAction': 'act', 'deviceAddress': 'dvc', 'deviceCustomDate1': 'deviceCustomDate1', 'deviceCustomDate1Label': 'deviceCustomDate1Label', 'deviceCustomDate2': 'deviceCustomDate2', 'deviceCustomDate2Label': 'deviceCustomDate2Label', 'deviceCustomNumber1': 'cn1', 'deviceCustomNumber1Label': 'cn1Label', 'deviceCustomNumber2': 'cn2', 'deviceCustomNumber2Label': 'cn2Label', 'deviceCustomNumber3': 'cn3', 'deviceCustomNumber3Label': 'cn3Label', 'deviceCustomString1': 'cs1', 'deviceCustomString1Label': 'cs1Label', 'deviceCustomString2': 'cs2', 'deviceCustomString2Label': 'cs2Label', 'deviceCustomString3': 'cs3', 'deviceCustomString3Label': 'cs3Label', 'deviceCustomString4': 'cs4', 'deviceCustomString4Label': 'cs4Label', 'deviceCustomString5': 'cs5', 'deviceCustomString5Label': 'cs5Label', 'deviceCustomString6': 'cs6', 'deviceCustomString6Label': 'cs6Label', 'deviceDirection': 'deviceDirection', 'deviceDnsDomain': 'deviceDnsDomain', 'deviceEventCategory': 'cat', 'deviceExternalId': 'deviceExternalId', 'deviceFacility': 'deviceFacility', 'deviceHostname': 'dvchost', 'deviceInboundInterface': 'deviceInboundInterface', 'deviceMacAddress': 'deviceMacAddress', 'deviceOutboundInterface': 'deviceOutboundInterface', 'deviceProcessName': 'deviceProcessName', 'deviceTranslatedAddress': 'deviceTranslatedAddress', 'dhost': 'destinationHostName', 'dmac': 'destinationMacAddress', 'dntdom': 'destinationNtDomain', 'dpriv': 'destinationUserPrivileges', 'dproc': 'destinationProcessName', 'dpt': 'destinationPort', 'dst': 'destinationAddress', 'duid': 'destinationUserId', 'duser': 'destinationUserName', 'dvc': 'deviceAddress', 'dvchost': 'deviceHostname', 'end': 'endTime', 'endTime': 'end', 'externalId': 'externalId', 'eventOutcome': 'outcome', 'fileCreateTime': 'fileCreateTime', 'fileHash': 'fileHash', 'fileHashMd5': 'fileHashMd5', 'fileHashSha1': 'fileHashSha1', 'fileHashSha256': 'fileHashSha256', 'fileHashSha512': 'fileHashSha512', 'fileId': 'fileId', 'fileModificationTime': 'fileModificationTime', 'fileName': 'fileName', 'filePath': 'filePath', 'filePermission': 'filePermission', 'fileSize': 'fSize', 'fileType': 'fileType', 'fname': 'fileName', 'fsize': 'fileSize', 'in': 'bytesIn', 'message': 'msg', 'msg': 'message', 'oldfileCreateTime': 'oldfileCreateTime', 'oldfileHash': 'oldfileHash', 'oldfileId': 'oldfileId', 'oldfileModificationTime': 'oldfileModificationTime', 'oldfileName': 'oldfileName', 'oldfilePath': 'oldfilePath', 'oldfilePermission': 'oldfilePermission', 'oldfileType': 'oldfileType', 'oldfsize': 'oldfsize', 'out': 'bytesOut', 'outcome': 'eventOutcome', 'proto': 'transportProtocol', 'receiptTime': 'rt', 'request': 'requestURL', 'requestClientApplication': 'requestClientApplication', 'requestCookies': 'requestCookies', 'requestMethod': 'requestMethod', 'requestURL': 'request', 'rt': 'receiptTime', 'shost': 'sourceHostName', 'smac': 'sourceMacAddress', 'sntdom': 'sourceNtDomain', 'sourceAddress': 'src', 'sourceDnsDomain': 'sourceDnsDomain', 'sourceHostName': 'shost', 'sourceMacAddress': 'smac', 'sourceNtDomain': 'sntdom', 'sourcePort': 'spt', 'sourceServiceName': 'sourceServiceName', 'sourceTranslatedAddress': 'sourceTranslatedAddress', 'sourceTranslatedPort': 'sourceTranslatedPort', 'sourceUserId': 'suid', 'sourceUserName': 'suser', 'sourceUserPrivileges': 'spriv', 'spriv': 'sourceUserPrivileges', 'spt': 'sourcePort', 'src': 'sourceAddress', 'start': 'startTime', 'startTime': 'start', 'suid': 'sourceUserId', 'suser': 'sourceUserName', 'transportProtocol': 'proto'}",
      "CONTAINS_VALIDATORS":"(<class 'dict'>) {'domain': <function is_domain at 0x7f123bb4c5e0>, 'ip': <function is_ip at 0x7f123bb4c430>, 'hash': <function is_hash at 0x7f123bb4c4c0>, 'sha1': <function is_sha1 at 0x7f123bb4c1f0>, 'sha256': <function is_sha256 at 0x7f123bb4c280>, 'sha512': <function is_sha512 at 0x7f123bb4c310>, 'md5': <function is_md5 at 0x7f123bb4c3a0>, 'host name': <function is_hostname at 0x7f123bb4c670>, 'mac address': <function is_mac at 0x7f123bb4c160>, 'url': <function is_url at 0x7f123bb4c550>, 'email': <function is_email at 0x7f123bb4c700>}",
      "CUSTOM_FUNCTION_RESULT_HEADERS":"(<class 'frozenset'>) frozenset({'message', 'name', 'status', 'custom_function_run_id', 'custom_function_name', 'oid'})",
      "CUSTOM_FUNCTION_RESULT_KEY_CUSTOM_FUNCTION_NAME":"(<class 'str'>) custom_function_name",
      "CUSTOM_FUNCTION_RESULT_KEY_CUSTOM_FUNCTION_RUN_ID":"(<class 'str'>) custom_function_run_id",
      "CUSTOM_FUNCTION_RESULT_KEY_NAME":"(<class 'str'>) name",
      "CUSTOM_FUNCTION_RESULT_KEY_STATUS":"(<class 'str'>) status",
      "Context":"function(dict_=None, autoescape=True, use_l10n=None, use_tz=None)",
      "DATA_PATH_MAP":"(<class 'dict'>) {'custom_function_result.loop_state': 'loop_state', 'custom_function_result': 'custom_function_results.*', 'action_result.data': 'result_data.*.data', 'action_result.loop_state': 'loop_state', 'action_result.summary': 'result_data.*.summary', 'action_result.parameter': 'result_data.*.parameter', 'action_result.message': 'result_data.*.message', 'action_result.status': 'result_data.*.status', 'action_result.context': 'result_data.*.context', 'action_result.id': 'result_data.*.id', 'summary': 'result_summary', 'artifact:*.cef': 'cef'}",
      "DEFAULT_LOCK_TIMEOUT":"(<class 'int'>) 1200",
      "DEFAULT_REST_BASE_URL":"(<class 'str'>) https://127.0.0.1/rest/",
      "ENCRYPTED_DATA_TYPE":"(<class 'list'>) ['password']",
      "GET_ALL":"(<class 'str'>) all",
      "GET_NEW":"(<class 'str'>) new",
      "INDICATOR_LOCK":"(<class 'str'>) 1001",
      "JsonTranslator":"function(skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, encoding='utf-8', default=None, use_decimal=True, namedtuple_as_object=True, tuple_as_array=True, bigint_as_string=False, item_sort_key=None, for_json=False, ignore_nan=False, int_as_string_bitcount=None, iterable_as_array=False)",
      "KILL_CHAIN_ACTIONS_ON_OBJECTIVES":"(<class 'str'>) actions_on_objectives",
      "KILL_CHAIN_CNC":"(<class 'str'>) cnc",
      "KILL_CHAIN_DELIVERY":"(<class 'str'>) delivery",
      "KILL_CHAIN_EXPLOITATION":"(<class 'str'>) exploitation",
      "KILL_CHAIN_INSTALLATION":"(<class 'str'>) installation",
      "KILL_CHAIN_LIST":"(<class 'list'>) ['reconnaissance', 'weaponization', 'delivery', 'exploitation', 'installation', 'cnc', 'actions_on_objectives']",
      "KILL_CHAIN_RECON":"(<class 'str'>) reconnaissance",
      "KILL_CHAIN_WEAPONIZATION":"(<class 'str'>) weaponization",
      "LoopState":"function(state: Union[str, dict, NoneType] = None) -> None",
      "NOTE_FORMAT_HTML":"(<class 'str'>) html",
      "NOTE_FORMAT_MARKDOWN":"(<class 'str'>) markdown",
      "PHANTOM_ENCODING":"(<class 'str'>) utf-8",
      "PHANTOM_HOME":"(<class 'str'>) /home/phantomuser/phantom",
      "PHANTOM_SCM_GIT":"(<class 'str'>) /home/phantomuser/phantom/scm/git",
      "PHANTOM_TMP":"(<class 'str'>) /tmp",
      "REST_BASE_URL":"(<class 'str'>) https://localhost:8443/rest/",
      "SENSITIVITY_AMBER":"(<class 'str'>) amber",
      "SENSITIVITY_GREEN":"(<class 'str'>) green",
      "SENSITIVITY_LIST":"(<class 'list'>) ['red', 'amber', 'green', 'white']",
      "SENSITIVITY_RED":"(<class 'str'>) red",
      "SENSITIVITY_WHITE":"(<class 'str'>) white",
      "SEVERITY_HIGH":"(<class 'str'>) high",
      "SEVERITY_LIST":"(<class 'list'>) ['low', 'medium', 'high']",
      "SEVERITY_LOW":"(<class 'str'>) low",
      "SEVERITY_MEDIUM":"(<class 'str'>) medium",
      "Template":"function(template_string, origin=None, name=None, engine=None)",
      "Vault":"function()",
      "_check_at_least_one_param":"function(**kwargs)",
      "_check_one_and_only_one_param":"function(or_none=False, **kwargs)",
      "_check_param_in_choices":"function(choices, **kwargs)",
      "_check_required_params":"function(**kwargs) -> tuple[bool, str]",
      "_clear_data_datastore":"function(key)",
      "_clear_data_filesystem":"function(key)",
      "_do_request_delete":"function(endpoint, success_message, error_message, trace=False)",
      "_do_request_get":"function(endpoint, params=None, success_message='', error_message='', trace=False)",
      "_do_request_post":"function(endpoint, json_data, success_message='', error_message='', trace=False)",
      "_dump_shell_returns":"function(out, err, ret_code) -> None",
      "_extract_data_path":"function(json_object_list, path, splits=None)",
      "_get_arity":"function(include_none=False, **kwargs)",
      "_get_container_id_from_user_input":"function(container=None, trace: bool = False) -> tuple[bool, str, typing.Optional[int]]",
      "_get_data_datastore":"function(key, clear_data=True)",
      "_get_data_filesystem":"function(key, clear_data=True)",
      "_get_phase_data_from_user_input":"function(phase=None, container=None, trace: bool = False) -> tuple[bool, str, typing.Optional[int], typing.Optional[int]]",
      "_get_statuses_for_status_type":"function(container, status_type, default_only=False, trace=False)",
      "_get_template_id_from_user_input":"function(template=None, trace: bool = False) -> tuple[bool, str, typing.Optional[int]]",
      "_merge_jsons":"function(default_json, merge_json)",
      "_rest_list_iterator":"function(endpoint, params=None, success_message=None, error_message=None, trace=False)",
      "_save_data_datastore":"function(value, key=None)",
      "_save_data_filesystem":"function(value, key=None)",
      "_set_status":"function(container=None, status=None, trace=False)",
      "act":"function(action=None, parameters=None, assets=None, tags=None, callback=None, reviewer=None, handle=None, start_time=None, name=None, asset_type=None, app=None, parent_action=None, loop_state=None)",
      "actions_done":"function(action_names=None, trace=False) -> bool",
      "add_artifact":"function(container=None, raw_data=None, cef_data=None, label=None, name=None, severity=None, identifier=None, artifact_type=None, field_mapping=None, trace=False, run_automation=False)",
      "add_attachment":"function(local_path, container_id, file_name=None, metadata=None)",
      "add_comment":"function(container, comment)",
      "add_list":"function(list_name=None, values=None)",
      "add_note":"function(container=None, note_type=None, trace=False, note_format='html', **kwargs)",
      "add_response_plan":"function(container=None, response_template_id=None, trace=False) -> tuple[bool, str, typing.Optional[str]]",
      "add_response_plan_task":"function(container=None, name=None, order=None, trace=False, **kwargs)",
      "add_tags":"function(container=None, tags=None, trace=False)",
      "add_task":"function(container=None, name=None, owner=None, role=None, trace=False, **kwargs)",
      "add_workbook":"function(container=None, workbook_id=None, trace=False)",
      "address_in_network":"function(ip: str, net: str) -> bool",
      "artifact_values":"function(events, field_name)",
      "assign":"function(container=None, user_id_or_name=None, role_id_or_name=None)",
      "attacker_ips":"function(container, scope=None, filter_artifact_ids=None, events=None) -> list[str]",
      "base64":"(<class 'module'>) <module 'base64' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/base64.py'>",
      "build_phantom_rest_url":"function(*args) -> str",
      "bytes_to_human_readable_size_str":"function(n: int) -> str",
      "call_playbook_action_callback":"function(function_object, callable_metadata_json_str, success_int, container_json_str, result_json_str, handle_json_str, loop_state_json_str)",
      "call_playbook_custom_function_callback":"function(function_object, callable_metadata_json_str, success_int, container_json_str, result_json_str, handle_json_str, loop_state_json_str)",
      "check_list":"function(list_name=None, value=None, case_sensitive=False, substring=False)",
      "cleanse_filtered_action_results_":"function(filtered_action_results) -> None",
      "clear_data":"function(key, use_filesystem=False)",
      "clear_object":"function(key=None, container_id=None, playbook_name=None, repo_name=None, trace=False) -> None",
      "close":"function(container, trace=False)",
      "collect":"function(container, datapath, scope=None, limit=None, none_if_first=False, filter_artifact_ids=None, trace=False)",
      "collect2":"function(container=None, action_results=None, action_name=None, datapath=None, filter_artifacts=None, tags=None, scope=None, limit=None, trace=False)",
      "collect_for_condition":"function(container=None, action_results=None, filtered_artifact_ids=None, filtered_action_result_ids=None, datapath=None, scope=None)",
      "collect_from_action_result":"function(action_result, datapath, trace=False)",
      "collect_from_container":"function(container, datapath, scope=None, limit=None, none_if_first=False, filter_artifact_ids=None, action_results=None, trace=False)",
      "collect_from_contains":"function(container=None, action_results=None, contains=None, tags=None, filter_artifacts=None, include_params=True, scope=None, limit=None, trace=False)",
      "collect_from_playbook_results":"function(playbook_results=None, datapath=None, trace=False)",
      "comment":"function(container=None, comment=None, trace=False)",
      "completed":"function(action_names: Optional[collections.abc.Sequence[str]] = None, playbook_names: Optional[collections.abc.Sequence[str]] = None, custom_function_names: Optional[collections.abc.Sequence[str]] = None, trace: bool = False) -> bool",
      "concatenate":"function(*args, **kwargs)",
      "condition":"function(container=None, action_results=None, conditions=None, logical_operator='or', scope=None, filtered_artifacts=None, filtered_results=None, limit=None, trace=False, name=None, auto=True, case_sensitive=True, handle=None, delimiter: Optional[str] = ',')",
      "convert_to_unicode":"function(value: 'Any') -> 'str'",
      "create_container":"function(name=None, label=None, container_type='default', template=None, tenant_id=None, trace=False)",
      "custom_function":"function(custom_function=None, parameters=None, callback=None, name=None, loop_state=None)",
      "datastore_add":"function(list_name, values)",
      "datastore_check":"function(list_name=None, value=None, case_sensitive=False, substring=False)",
      "datastore_delete":"function(list_name)",
      "datastore_get":"function(list_name)",
      "datastore_present":"function(list_name, values, column_index=-1)",
      "datastore_set":"function(list_name, values_list_of_lists)",
      "datetime":"uninspectable callable",
      "dateutil":"(<class 'module'>) <module 'dateutil' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/dateutil/__init__.py'>",
      "debug":"function(message)",
      "debug_private_error_":"function(message: Any) -> None",
      "debug_private_message_":"function(message: Any) -> None",
      "decision":"function(container=None, action_results=None, conditions=None, logical_operator='or', scope=None, filtered_artifacts=None, filtered_results=None, limit=None, trace=False, name=None, auto=True, case_sensitive=True, delimiter: Optional[str] = ',')",
      "decode_unicode":"function(arg)",
      "decode_unicode_dict":"function(args) -> None",
      "decode_unicode_list":"function(args) -> None",
      "decode_unicode_parameters":"function(func)",
      "decode_unicode_tuple":"function(args)",
      "deduplicate_params":"function(parameters)",
      "deepcopy":"function(x, memo=None, _nil=[])",
      "delete_artifact":"function(artifact_id=None)",
      "delete_attachment":"function(attachment_id)",
      "delete_from_list":"function(list_name=None, value=None, column=None, remove_all=False, remove_row=False, trace=False)",
      "delete_pin":"function(pin_id=None)",
      "discontinue":"function() -> None",
      "django_settings":"(<class 'django.conf.LazySettings'>) <Settings \"phantom_ui.settings\">",
      "does_condition_use_ar_data_":"function(conditions=None, trace=False) -> bool",
      "does_condition_use_filtered_ar_data_":"function(conditions=None, trace=False) -> bool",
      "dump_json":"function(dump_dict, tag=None) -> None",
      "encode_proxy_var":"function(val: str) -> str",
      "encode_unicode":"function(arg)",
      "encode_unicode_dict":"function(args) -> None",
      "encode_unicode_list":"function(args) -> None",
      "encode_unicode_parameters":"function(func)",
      "encode_unicode_tuple":"function(args)",
      "error":"function(message)",
      "escape_db_key":"function(s: str) -> str",
      "expand_datapaths_":"function(container=None, datapaths=None, scope=None, filter_artifact_ids=None, trace=False, separator=None, drop_none=False, csv_list=True)",
      "extract_data_paths":"function(json_object_list, paths)",
      "fix_artifact_dp":"function(datapaths)",
      "fix_datapath":"function(datapath, trace=False)",
      "format":"function(container=None, template=None, parameters=None, scope=None, filter_artifact_ids=None, name=None, trace=False, separator=None, drop_none=False)",
      "get_URLs":"function(container, scope=None, filter_artifact_ids=None, events=None)",
      "get_action_info":"function(action=None, action_run_id=0, app_run_id=0, result_data=True)",
      "get_action_results":"function(action: Union[str, collections.abc.Mapping[str, Any], NoneType] = None, action_run_id=0, app_run_id=0, result_data=True, action_name=None, playbook_run_id=0, flatten=True, trace=False) -> collections.abc.Sequence[collections.abc.Mapping[str, typing.Any]]",
      "get_action_status":"function(action_names=None)",
      "get_apps":"function(action=None, asset=None, app_type=None)",
      "get_artifact_ids_from_action_result":"function(named_datapath, action_results=None, trace: bool = False)",
      "get_artifacts":"function(container, artifact_label, scope=None, filter_artifact_ids=None, limit=None)",
      "get_asset_names":"function(action=None, tags=None)",
      "get_assets":"function(action=None, tags=None, types=None)",
      "get_attacked_ips":"function(container, events)",
      "get_base_url":"function() -> Optional[str]",
      "get_cef_data":"function(input_dict, map_dict)",
      "get_cef_value":"function(event_id, cef, field_name) -> str",
      "get_child_playbook_action_results":"function(action_name=None, trace=False)",
      "get_child_playbook_results":"function(playbook_runs_info=None, playbook_run_name=None, trace=False)",
      "get_collect_limit_":"function()",
      "get_container":"function(container_id)",
      "get_current_container_id_":"function()",
      "get_current_container_label_":"function()",
      "get_current_playbook_info":"function()",
      "get_custom_function_results":"function(custom_function_run_id=None, custom_function_name=None, trace=False)",
      "get_custom_function_status":"function(custom_function_names: Optional[collections.abc.Sequence[str]] = None) -> Optional[collections.abc.Mapping[str, Any]]",
      "get_data":"function(key, clear_data=True, use_filesystem=False)",
      "get_datapaths_for_contains":"function(output, contains, path_prefix='')",
      "get_default_rest_headers":"function() -> dict[str, str]",
      "get_effective_user":"function()",
      "get_extra_data":"function(action=None, action_run_id=0, app_run_id=0)",
      "get_file_name_from_url":"function(url, should_unquote: bool = True)",
      "get_filter_artifact_ids_":"function(datapath_obj, datapath_is_str, filter_artifact_ids, action_results=None, trace=False)",
      "get_filtered_data":"function(name=None)",
      "get_format_data":"function(name=None)",
      "get_host_from_url":"function(url: str) -> Optional[str]",
      "get_incident_phase":"function(container=None, trace=False)",
      "get_incident_task":"function(container=None, task_id=None, trace=False, **kwargs)",
      "get_incident_tasks":"function(container=None, trace=False) -> tuple[bool, str, typing.Optional[collections.abc.Sequence[str]]]",
      "get_json_object":"function(data)",
      "get_list":"function(list_name=None, values=None, column_index=-1, trace=False)",
      "get_list_from_string":"function(comma_seperated_list: str, drop_blanks: bool = True, remove_duplicates: bool = True) -> list[str]",
      "get_notes":"function(container=None, artifact_id=None, task_id=None, trace=False, **kwargs)",
      "get_object":"function(key=None, clear_data=False, container_id=None, playbook_name=None, repo_name=None, trace=False)",
      "get_parent_handle":"function()",
      "get_parent_playbook_run_id":"function()",
      "get_phantom_home":"function() -> Optional[str]",
      "get_phase":"function(container=None, trace=False)",
      "get_playbook_info":"function(playbook_id=None, playbook_name=None, playbook_repo=None)",
      "get_playbook_results":"function(playbook_run_id=0, result_data=False, flatten=True)",
      "get_playbook_run_id_":"function()",
      "get_playbook_scope_":"function()",
      "get_playbook_scope_artifacts_":"function()",
      "get_playbook_status":"function(names=None, playbook_run_ids=None)",
      "get_random_chars":"function(size: int = 6, chars: str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') -> str",
      "get_raw_data":"function(container)",
      "get_req_value":"function(in_dict, in_key, strip_it: bool = True) -> str",
      "get_request_iter_pages":"function(base_url: str, params=None, page_size: int = 50, verify=None)",
      "get_response_templates":"function(trace=False) -> tuple[bool, str, typing.Optional[list[str]]]",
      "get_rest_base_url":"function() -> str",
      "get_results":"function(name, flatten=False, trace=False)",
      "get_run_data":"function(key=None)",
      "get_start_end_from_range_str":"function(ip_range: str = '') -> tuple[typing.Optional[str], typing.Optional[str]]",
      "get_str_val":"function(in_dict, in_key, def_val=None, strip_it=True)",
      "get_succ_or_failure_text":"function(status_code)",
      "get_successful_action_results_v2":"function(action_results)",
      "get_summary":"function(playbook_run_id=0)",
      "get_tagged_artifacts":"function(container, tags, label='*', **kwargs)",
      "get_tags":"function(container=None, trace=False)",
      "get_task_notes":"function(container=None, task_id=None, trace=False, **kwargs)",
      "get_tasks":"function(container=None, trace=False, **kwargs)",
      "get_user_session_token":"function()",
      "get_valid_file_name":"function(s: str) -> str",
      "get_value":"function(in_dict, in_key, def_val=None, strip_it=True)",
      "get_values_in_events":"function(events, field_name) -> list[str]",
      "get_vault_file":"function(s_hash)",
      "get_vault_file_path":"function(vault_id)",
      "get_vault_item_info":"function(vault_id=None, get_hashes=False)",
      "html_file_to_pdf":"function(source_file_path, output_file_path) -> bool",
      "html_string_to_pdf":"function(source_html_string, output_file_path)",
      "install_info":"(<class 'module'>) <module 'phantom_common.install_info' from '/home/phantomuser/phantom/pycommon3/phantom_common/install_info.pyc'>",
      "ip_to_int_":"function(ip: str) -> int",
      "ipaddress":"(<class 'module'>) <module 'ipaddress' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/ipaddress.py'>",
      "is_custom_function_running":"function()",
      "is_domain":"function(hostname: str) -> bool",
      "is_email":"function(email_str) -> bool",
      "is_fail":"function(status_code) -> bool",
      "is_hash":"function(hash_str: str) -> bool",
      "is_hostname":"function(hostname: str) -> bool",
      "is_ip":"function(ip_str: str) -> bool",
      "is_ip_in_range":"function(ip_to_check: str, ip_range) -> bool",
      "is_ip_in_subnet_":"function(ip: str, network: str, mask_len: int) -> bool",
      "is_mac":"function(mac_str: str) -> bool",
      "is_md5":"function(input_str: str) -> bool",
      "is_sha1":"function(input_str: str) -> bool",
      "is_sha256":"function(input_str: str) -> bool",
      "is_sha512":"function(input_str: str) -> bool",
      "is_success":"function(status_code)",
      "is_url":"function(input_str: str) -> bool",
      "is_windows_path":"function(path: str) -> bool",
      "isfloat":"function(value) -> bool",
      "join":"function(a, *p)",
      "json":"(<class 'module'>) <module 'simplejson' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/simplejson/__init__.py'>",
      "merge":"function(case=None, container_id=None, artifact_id=None, ioc_field=None, playbook_run_id=None, action_run_id=None, vault_id=None, note_title=None, note_description=None, trace=False)",
      "non_started_runs":"function(names: frozenset[str], run_names: frozenset[str]) -> frozenset[str]",
      "os":"(<class 'module'>) <module 'os' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/os.py'>",
      "parse_errors":"function(results)",
      "parse_results":"function(results)",
      "parse_success":"function(action_results)",
      "ph_engine":"(<class 'module'>) <module 'phantom.ph_engine' from '/home/phantomuser/phantom/lib3/phantom/ph_engine.pyc'>",
      "ph_jsons":"(<class 'module'>) <module 'phantom.json_keys' from '/home/phantomuser/phantom/lib3/phantom/json_keys.pyc'>",
      "ph_status":"(<class 'module'>) <module 'phantom.status' from '/home/phantomuser/phantom/lib3/phantom/status.pyc'>",
      "pin":"function(container=None, message=None, data=None, pin_type=None, pin_style=None, truncate=True, name=None, trace=False)",
      "playbook":"function(playbook=None, container=None, handle=None, show_debug=True, callback=None, name=None, inherit_scope=True, inputs=None, loop_state=None)",
      "playbook_block":"function(block_name=None, cf_run_id=0)",
      "playbooks_completed":"function(names: Optional[collections.abc.Sequence[str]], trace: bool) -> bool",
      "print_errors":"function(action_results)",
      "promote":"function(container=None, template=None, trace=False)",
      "prompt":"function(user=None, message='', respond_in_mins=30, callback=None, name=None, options=None, parameters=None, container=None, scope=None, filter_artifact_ids=None, trace=False, separator=None, drop_none=False)",
      "prompt2":"function(user=None, respond_in_mins=30, callback=None, response_types=None, message='', parameters=None, name=None, container=None, scope=None, filter_artifact_ids=None, separator=None, drop_none=False, trace=False, role=None)",
      "quote_plus":"function(string, safe='', encoding=None, errors=None)",
      "random":"(<class 'module'>) <module 'random' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/random.py'>",
      "re":"(<class 'module'>) <module 're' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/re.py'>",
      "remove_list":"function(list_name=None, empty_list: bool = False, trace=False)",
      "remove_none_values":"function(input_dict)",
      "remove_tags":"function(container=None, tags=None, trace=False)",
      "render_template":"function(template, context)",
      "requests":"(<class 'module'>) <module 'requests' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/requests/__init__.py'>",
      "reset_python_path_":"function(paths) -> None",
      "run_ext_command":"function(command, dump_ouput: bool = False)",
      "run_ext_command_list":"function(command_list, dump_ouput: bool = False)",
      "runs_completed":"function(names: Optional[collections.abc.Sequence[str]], get_status: Callable[[Optional[collections.abc.Sequence[str]]], Optional[collections.abc.Mapping[str, Any]]], trace: bool) -> bool",
      "safe_int":"function(obj) -> Optional[int]",
      "save_artifact":"function(container, raw_data, cef_data, label, name, severity, identifier, artifact_type, field_mapping=None, run_automation=False)",
      "save_data":"function(value, key=None, use_filesystem=False)",
      "save_object":"function(key=None, value=None, auto_delete=True, container_id=None, playbook_name=None, repo_name=None, trace=False)",
      "save_playbook_output_data":"function(output=None, trace=False)",
      "save_run_data":"function(value=None, key=None, auto=True, trace=False)",
      "session_delete":"function(uri, *args, **kwargs)",
      "session_get":"function(uri, *args, **kwargs)",
      "session_post":"function(uri, *args, **kwargs)",
      "set_action_limit":"function(limit)",
      "set_collect_limit_":"function(limit=None) -> None",
      "set_duetime":"function(container=None, operation='+', minutes=None, trace=None)",
      "set_git_repo_path_":"function(repo_name)",
      "set_incident_owner":"function(user=None, container=None, trace=False) -> tuple[bool, str]",
      "set_incident_phase":"function(response_plan_id, phase_id, container=None, trace=False)",
      "set_label":"function(container=None, label=None, trace=False)",
      "set_list":"function(list_name=None, values=None)",
      "set_owner":"function(container=None, user=None, trace=False, task_id=None, role=None)",
      "set_parent_handle":"function(handle)",
      "set_phase":"function(container=None, phase=None, trace=False)",
      "set_python_path_":"function(path_val)",
      "set_sensitivity":"function(container, sensitivity)",
      "set_severity":"function(container, severity)",
      "set_status":"function(container=None, status=None, trace=False)",
      "set_task_owner":"function(container, task_id, owner, trace=False) -> tuple[bool, str, typing.Optional[collections.abc.Sequence[str]]]",
      "six":"(<class 'module'>) <module 'six' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/six.py'>",
      "string":"(<class 'module'>) <module 'string' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/string.py'>",
      "subprocess":"(<class 'module'>) <module 'subprocess' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/subprocess.py'>",
      "sys":"(<class 'module'>) <module 'sys' (built-in)>",
      "task":"function(user=None, message=None, respond_in_mins=0, callback=None, name=None)",
      "timedelta":"uninspectable callable",
      "trace_":"function(show_message: bool, message: Any) -> None",
      "traceback":"(<class 'module'>) <module 'traceback' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/traceback.py'>",
      "txfrm_collected_ar_data_":"function(tmp_operand_data, trace=False)",
      "type_correct_":"function(value_to_correct=None, reference_value=None)",
      "types":"(<class 'module'>) <module 'types' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/types.py'>",
      "unescape_db_key":"function(s: str) -> str",
      "unquote":"function(string, encoding='utf-8', errors='replace')",
      "update":"function(container, update, unify_datetime_format=False)",
      "update_pin":"function(pin_id=None, message=None, data=None, pin_type=None, pin_style=None, trace=False)",
      "urllib":"(<class 'module'>) <module 'urllib' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/urllib/__init__.py'>",
      "urlparse":"(<class 'module'>) <module 'urllib.parse' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/urllib/parse.py'>",
      "utc":"(<class 'pytz.UTC'>) UTC",
      "uuid":"(<class 'module'>) <module 'uuid' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/uuid.py'>",
      "valid_ip":"function(address: Union[str, bytes]) -> bool",
      "valid_net":"function(net) -> bool",
      "validate_value_presense":"function(obj)",
      "vault":"(<class 'module'>) <module 'phantom.vault' from '/home/phantomuser/phantom/lib3/phantom/vault.pyc'>",
      "vault_add":"function(container=None, file_location=None, file_name=None, metadata=None, trace=False)",
      "vault_delete":"function(vault_id=None, file_name=None, container_id=None, remove_all=False, trace=False)",
      "vault_info":"function(vault_id=None, file_name=None, container_id=None, trace=False, download_file=True)",
      "victim_ips":"function(container, scope=None, filter_artifact_ids=None, events=None) -> list[str]",
      "wraps":"function(wrapped, assigned=('__module__', '__name__', '__qualname__', '__doc__', '__annotations__'), updated=('__dict__',))",
      "xrange":"uninspectable callable"
   },
   "BaseConnector":{
      "_abc_impl":"(<class '_abc._abc_data'>) <_abc._abc_data object at 0x7f123b5d6a40>",
      "_apply_credential_management":"function(self, config)",
      "_apply_environment_variables":"function(self, config)",
      "_cleanse_param":"function(self, parameters: dict[str, dict[str, typing.Any]])",
      "_cleanse_parameters":"function(self, parameters)",
      "_count_failures":"function(self, container) -> None",
      "_create_state_file":"function(self, path)",
      "_decrypt_dict_key":"function(self, dict_name, dictionary, key_name, dec_key=None)",
      "_get_phantom_base_url":"function()",
      "_get_phantom_home":"function()",
      "_handle_action":"function(self, in_json, handle)",
      "_handle_cancel":"function(self, signum, frame) -> None",
      "_handle_ingest_summary":"function(self)",
      "_init_ingestion_dicts":"function(self) -> None",
      "_is_action_ingestion":"function(self) -> bool",
      "_is_app_json":"function(self, json_file_path, connector_py) -> bool",
      "_load_app_json":"function(self)",
      "_load_credential_manager":"function(self, name)",
      "_load_input_json":"function(self)",
      "_parse_action_info":"function(self)",
      "_post_container":"function(self, container)",
      "_postprocess_action_results":"function(self) -> None",
      "_prepare_container":"function(self, container) -> None",
      "_process_container_artifacts_response":"function(self, artifact_resp_data) -> None",
      "_process_container_response":"function(self, response, fail_on_duplicate=False)",
      "_save_artifacts_ingest":"function(self)",
      "_set_csrf_info":"function(token, referer) -> None",
      "_set_current_param":"function(self, param) -> None",
      "_set_current_param_context":"function(self, param_context) -> None",
      "_set_signals":"function(self) -> None",
      "_set_umask":"function(self) -> None",
      "_validate_app_config":"function(self)",
      "_validate_config":"function(self)",
      "_validate_param":"function(self, parameters: dict[str, dict[str, typing.Any]], action_result: phantom.action_result.ActionResult)",
      "add_action_result":"function(self, action_result)",
      "append_to_message":"function(self, message)",
      "debug_print":"function(self, tag, dump_object='') -> None",
      "error_print":"function(self, tag, dump_object='') -> None",
      "finalize":"function(self)",
      "get_action_identifier":"function(self)",
      "get_action_name":"function(self)",
      "get_action_results":"function(self)",
      "get_app_config":"function(self)",
      "get_app_id":"function(self)",
      "get_app_json":"function(self)",
      "get_app_name":"function(self)",
      "get_app_run_id":"function(self)",
      "get_asset_id":"function(self)",
      "get_ca_bundle":"function(self)",
      "get_config":"function(self)",
      "get_connector_id":"function(self)",
      "get_container_id":"function(self)",
      "get_container_info":"function(self, container_id=None)",
      "get_current_param":"function(self)",
      "get_current_param_context":"function(self)",
      "get_phantom_base_url":"function(self)",
      "get_phantom_home":"function(self)",
      "get_product_installation_id":"function(self)",
      "get_product_name":"function(self)",
      "get_product_vendor":"function(self)",
      "get_product_version":"function(self)",
      "get_product_version_regex":"function(self)",
      "get_state":"function(self)",
      "get_state_dir":"function(self)",
      "get_state_file_path":"function(self)",
      "get_status":"function(self)",
      "get_status_message":"function(self)",
      "handle_action":"function(self, param)",
      "handle_cancel":"function(self)",
      "handle_exception":"function(self, exception) -> None",
      "initialize":"function(self)",
      "is_action_cancelled":"function(self)",
      "is_fail":"function(self)",
      "is_poll_now":"function(self) -> bool",
      "is_success":"function(self)",
      "load_state":"function(self)",
      "lock":"function(self, param, action_result)",
      "remove_action_result":"function(self, action_result)",
      "save_artifact":"function(self, artifact)",
      "save_artifact_ingest":"function(self, label, data, id, name, type, severity, container_id, start_time, kill_chain=None) -> None",
      "save_artifacts":"function(self, artifacts)",
      "save_container":"function(self, container, fail_on_duplicate=False)",
      "save_container_ingest":"function(self, id, container, name, type, start_time, severity, sensitivity='green', kill_chain=None)",
      "save_containers":"function(self, containers, fail_on_duplicate=False)",
      "save_progress":"function(self, progress_str_const, *unnamed_format_args, **named_format_args) -> None",
      "save_state":"function(self, state)",
      "send_progress":"function(self, progress_str_const, *unnamed_format_args, **named_format_args) -> None",
      "set_status":"function(self, status_code, status_message='', exception=None, *unnamed_format_args, **named_format_args)",
      "set_status_save_progress":"function(self, status_code, status_message='', exception=None, *unnamed_format_args, **named_format_args)",
      "set_validator":"function(self, contains, validator)",
      "telemetry_print":"function(self, tag, dump_object='') -> None",
      "unknown_action":"function(self)",
      "unlock":"function(self)",
      "update_summary":"function(self, summary)",
      "validate_parameters":"function(self, param: dict[str, dict[str, typing.Any]])"
   },
   "ActionResult":{
      "_debug_data_to_string":"function(self, item)",
      "_get_exception_str":"function(self, exception)",
      "add_data":"function(self, item)",
      "add_debug_data":"function(self, item)",
      "add_exception_details":"function(self, exception)",
      "add_extra_data":"function(self, item)",
      "append_to_message":"function(self, message_str) -> None",
      "dump_debug_data":"function(self) -> None",
      "get_data":"function(self) -> list",
      "get_data_size":"function(self)",
      "get_debug_data":"function(self)",
      "get_debug_data_size":"function(self)",
      "get_dict":"function(self)",
      "get_extra_data":"function(self)",
      "get_extra_data_size":"function(self)",
      "get_message":"function(self)",
      "get_param":"function(self)",
      "get_status":"function(self)",
      "get_summary":"function(self)",
      "is_fail":"function(self)",
      "is_success":"function(self)",
      "set_base_connector":"function(self, obj)",
      "set_data_size":"function(self, size)",
      "set_debug_data_size":"function(self, size)",
      "set_extra_data_size":"function(self, size)",
      "set_param":"function(self, param_dict) -> None",
      "set_param_context":"function(self, param_context)",
      "set_result_index":"function(self, result_index)",
      "set_status":"function(self, status_code, status_message='', exception=None, *unnamed_format_args, **named_format_args)",
      "set_summary":"function(self, summary: dict) -> dict",
      "update_data":"function(self, item)",
      "update_extra_data":"function(self, item)",
      "update_param":"function(self, param_dict) -> None",
      "update_summary":"function(self, summary)"
   },
   "Vault":{
      "_get_file_info":"function(vault_id=None, file_name=None, container_id=None, method='or', download_file=True)",
      "add_attachment":"function(file_location, container_id, file_name=None, metadata=None)",
      "create_attachment":"function(file_contents, container_id, file_name=None, metadata=None)",
      "get_file_info":"function(vault_id=None, file_name=None, container_id=None, method='or')",
      "get_file_path":"function(vault_id)",
      "get_vault_tmp_dir":"function()"
   },
   "phantom.vault":{
      "Any":"function(*args, **kwds)",
      "ChunkTracker":"function(filename, total_size) -> None",
      "DOWNLOAD_URL_PATH":"(<class 'str'>) https://localhost:8443/rest//download_attachment",
      "FILE_EXTENSIONS":"(<class 'dict'>) {'.vmsn': ['os memory dump', 'vm snapshot file'], '.vmss': ['os memory dump', 'vm suspend file'], '.js': ['javascript'], '.doc': ['doc'], '.docx': ['doc']}",
      "MAGIC_FORMATS":"(<class 'list'>) [(re.compile('^PE.* Windows'), ['pe file', 'hash']), (re.compile('^MS-DOS executable'), ['pe file', 'hash']), (re.compile('^PDF '), ['pdf']), (re.compile('^MDMP crash'), ['process dump']), (re.compile('^Macromedia Flash'), ['flash'])]",
      "NONROOT_INSTALL":"(<class 'bool'>) True",
      "Optional":"function(*args, **kwds)",
      "PHANTOM_BASE_URL":"(<class 'str'>) ",
      "PHANTOM_ENCODING":"(<class 'str'>) utf-8",
      "PHANTOM_VAULT":"(<class 'str'>) /home/phantomuser/phantom/vault",
      "PHANTOM_VAULT_TMP":"(<class 'str'>) /home/phantomuser/phantom/vault/tmp",
      "QUERY_URL_PATH":"(<class 'str'>) https://localhost:8443/rest//container_attachment",
      "QUERY_URL_PATH_PHANTOM":"(<class 'str'>) https://localhost:8443/rest/container_attachment",
      "REST_BASE_URL":"(<class 'str'>) https://localhost:8443/rest/",
      "UPLOAD_FINISH_URL_PATH":"(<class 'str'>) /upload_chunked_complete",
      "UPLOAD_URL_PATH":"(<class 'str'>) /upload_chunked",
      "Union":"function(*args, **kwds)",
      "VAULT_DOC_URL_PATH":"(<class 'str'>) https://localhost:8443/rest//vault_document",
      "Vault":"function()",
      "_check_at_least_one_param":"function(**kwargs)",
      "_check_required_params":"function(**kwargs) -> tuple[bool, str]",
      "_chunk_file_upload":"function(file_location, file_name, container_id, metadata=None)",
      "_do_request_delete":"function(endpoint, success_message, error_message, trace=False)",
      "_download_attachment":"function(url, vault_hash, local_path)",
      "_get_automation_broker_path":"function(vault_id, download_file=True)",
      "_get_connector_run_dir":"function() -> str",
      "_get_container_id_from_user_input":"function(container=None, trace: bool = False) -> tuple[bool, str, typing.Optional[int]]",
      "add_attachment":"function(local_path, container_id, file_name=None, metadata=None)",
      "build_phantom_rest_url":"function(*args) -> str",
      "chown_user_grp":"function(path) -> None",
      "compat":"(<class 'module'>) <module 'phantom_common.compat' from '/home/phantomuser/phantom/pycommon3/phantom_common/compat.pyc'>",
      "config":"(<class 'phantom.utils.PylibConfig'>) <phantom.utils.PylibConfig object at 0x7f123bb9eee0>",
      "contains_from_file":"function(file_path, alt_file_name=None)",
      "debug_private_error_":"function(message: Any) -> None",
      "debug_private_message_":"function(message: Any) -> None",
      "defunct_api":"function(condition=True, message='') -> None",
      "delete_attachment":"function(attachment_id)",
      "deprecated_api":"function(condition=True, message='') -> None",
      "get_default_rest_headers":"function() -> dict[str, str]",
      "get_meta_by_hash":"function(container_id, s_hash, calculate=False)",
      "get_phantom_vault_tmp_dir":"function()",
      "get_request_iter_pages":"function(base_url: str, params=None, page_size: int = 50, verify=None)",
      "get_rest_base_url":"function() -> str",
      "get_vault_file":"function(s_hash)",
      "get_vault_file_path":"function(vault_id)",
      "grp":"(<class 'module'>) <module 'grp' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/lib-dynload/grp.cpython-39-x86_64-linux-gnu.so'>",
      "hashlib":"(<class 'module'>) <module 'hashlib' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/hashlib.py'>",
      "install_info":"(<class 'module'>) <module 'phantom_common.install_info' from '/home/phantomuser/phantom/pycommon3/phantom_common/install_info.pyc'>",
      "is_nonroot_install":"function() -> bool",
      "join":"function(a, *p)",
      "json":"(<class 'module'>) <module 'json' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/json/__init__.py'>",
      "logger":"(<class 'logging.Logger'>) <Logger phantom.vault (WARNING)>",
      "logging":"(<class 'module'>) <module 'logging' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/logging/__init__.py'>",
      "magic":"(<class 'module'>) <module 'magic' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/magic.py'>",
      "os":"(<class 'module'>) <module 'os' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/os.py'>",
      "playbook_api":"function(copy_user_provided_args=True) -> None",
      "re":"(<class 'module'>) <module 're' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/re.py'>",
      "requests":"(<class 'module'>) <module 'requests' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/site-packages/requests/__init__.py'>",
      "safe_int":"function(obj) -> Optional[int]",
      "shutil":"(<class 'module'>) <module 'shutil' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/shutil.py'>",
      "tempfile":"(<class 'module'>) <module 'tempfile' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/tempfile.py'>",
      "uuid":"(<class 'module'>) <module 'uuid' from '/home/phantomuser/phantom/usr/python39/lib/python3.9/uuid.py'>",
      "vault_add":"function(container=None, file_location=None, file_name=None, metadata=None, trace=False)",
      "vault_delete":"function(vault_id=None, file_name=None, container_id=None, remove_all=False, trace=False)",
      "vault_info":"function(vault_id=None, file_name=None, container_id=None, trace=False, download_file=True)"
   }
}